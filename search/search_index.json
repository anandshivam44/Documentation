{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Shivam Anand's Site","text":"<p>Welcome to my personal documentation site.</p>"},{"location":"Guides/debug-k8s-ingress/","title":"Debug k8s ingress","text":"<p>The service selector should match at least 1 pod label and deployment  Service Target port should match the container port of the pod the service port can be any number The deployment metadata -&gt; label is not used by the service deployment -&gt; selector -&gt; match label and deployment -&gt; template -&gt; metadata -&gt; labels </p>"},{"location":"Handy/natural-numbers/","title":"Natural numbers","text":"<p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99</p>"},{"location":"Playbooks/EncryptEC2FromCloudFormation/EBSEncryption/","title":"Encrypt EC2 From CloudFormation","text":""},{"location":"Playbooks/EncryptEC2FromCloudFormation/EBSEncryption/#enable-ebs-encryption-from-cloudformation","title":"Enable EBS Encryption from CloudFormation","text":""},{"location":"Playbooks/EncryptEC2FromCloudFormation/EBSEncryption/#sample-scenario","title":"Sample Scenario:","text":""},{"location":"Playbooks/EncryptEC2FromCloudFormation/EBSEncryption/#you-created-an-ec2-instance-using-a-cloudformation-template-by-default-the-disk-attached-ie-ebs-volume-attached-to-the-ec2-is-not-encrypted-you-company-follow-compliance-standards-that-requires-storage-volumes-to-be-encrypted","title":"You created an EC2 Instance using a CloudFormation Template. By default the disk attached i.e. EBS Volume attached to the EC2 is not encrypted. You company follow compliance standards that requires storage volumes to be encrypted.","text":""},{"location":"Playbooks/EncryptEC2FromCloudFormation/EBSEncryption/#problem","title":"Problem","text":""},{"location":"Playbooks/EncryptEC2FromCloudFormation/EBSEncryption/#your-ec2-is-stateful-changing-ebs-encryption-to-true-in-cloudformation-will-delete-the-previous-volume-you-do-not-want-your-data-to-be-deleted","title":"Your EC2 is stateful. Changing EBS Encryption to True in cloudformation will delete the previous volume. You do not want your data to be deleted.","text":""},{"location":"Playbooks/EncryptEC2FromCloudFormation/EBSEncryption/#solution","title":"Solution","text":"<p>Situations like this can get tricky due unavailability of straightforward solution and due to lack of resource.</p> <p>Here is a workaround</p>"},{"location":"Playbooks/EncryptEC2FromCloudFormation/EBSEncryption/#1-create-an-ami-from-your-instance","title":"1. Create an AMI from your instance","text":"<p>Creating an AMI automatically creates a snapshot. So you also have a backup snapshot. You can use this backup in case of any disaster. Below is a powershell command to do the same </p><pre><code>$INSTANCE_ID=\"i-xxxxxxxxxxxx\"\n$AMI_NAME=\"UNENCRYPTED_AMI\"\n$SNAPSHOT_NAME=\"UNENCRYPTED_SNAPSHOT\"\naws ec2 create-image  --instance-id $INSTANCE_ID  --name $AMI_NAME  --description $AMI_NAME  --tag-specifications \"ResourceType=image,Tags=[{Key=Name,Value=$($AMI_NAME)}]\" \"ResourceType=snapshot,Tags=[{Key=Name,Value=$($SNAPSHOT_NAME)}]\"\n</code></pre> You can even do the same step manually <p></p>"},{"location":"Playbooks/EncryptEC2FromCloudFormation/EBSEncryption/#2-create-a-copy-of-your-ami","title":"2. Create a Copy of your AMI","text":"<p>AMi creation takes time. Once unencrypted AMI is created then create a copy of your AMI. While making a copy we have to enable encryption. Enabling Encryption in this stage is very important. All EBS ceated from an encrypted AMI wil always be encrypted.  For Encryption AWS will ask for KMS Key. You can leave all values to default and let AWS create and manage KMS Key for you.</p> <p>Below is a powershell command to do the same  </p> <p>Modify <code>REGION</code> and <code>AMI_ID_TO_COPY</code> accordingly </p><pre><code>$REGION=\"us-east-1\"\n$AMI_NAME=\"ENCRYPTED_AMI\"\n$AMI_ID_TO_COPY=\"ami-xxxxxxxxxxxxxx\" #Copy AMI ID you get after completing Step 1\naws ec2 copy-image  --region $REGION  --name $AMI_NAME --source-region $REGION  --source-image-id $AMI_ID_TO_COPY  --description $AMI_NAME --encrypted\n</code></pre> You can even do the same step manually  <p></p>"},{"location":"Playbooks/EncryptEC2FromCloudFormation/EBSEncryption/#3-modify-ami-id-in-your-cloudformation-template","title":"3. Modify AMI ID in your CloudFormation Template","text":"<p>Goto your CloudFormation Template where EC2 is created. Now you need to make sure that the Input AMI ID for your instance is modified and repleced to this new one. </p>"},{"location":"Playbooks/EncryptEC2FromCloudFormation/EBSEncryption/#4-create-a-change-set-in-your-cloudformation-stack-and-deploy-the-changes","title":"4. Create a Change Set in your CloudFormation Stack and deploy the changes","text":"<p>If your Stack is small you can directly update your cloudformation template or if your Stack is huge then you can create a change set and deploy your CloudFormation Template. </p>"},{"location":"Playbooks/EncryptEC2FromCloudFormation/EBSEncryption/#5-verify-new-ec2-in-ec2-console","title":"5. Verify new EC2 in EC2 Console","text":"<p>A new EC2 starts with an encrypted Volume. Goto your EC2 console and verify that a new instance is started and has a encrypted volume.</p>"},{"location":"Playbooks/ShutDownAllEC2EqualIntervalsOfTime/","title":"Save Cost on EC2 - ShutDown All EC2 at Night","text":""},{"location":"Playbooks/ShutDownAllEC2EqualIntervalsOfTime/#shutdown-ec2-periodically-to-save-cost","title":"Shutdown EC2 periodically to save cost","text":"<p>Many a times you might forget to shutdown ec2 after late night learning and forget to turn off your ec2 instances. This article focuses on to <code>Shutdown EC2 periodically to save cost</code> </p>"},{"location":"Playbooks/ShutDownAllEC2EqualIntervalsOfTime/#task","title":"Task","text":"<p>Create a Lambda function that shutdowns ec2 instances periodically using AWS CloudWatch Events.</p> <p>This task is achieved using two ways 1. Manually (Recommended for first time practise) 2. Automated using CloudFormation (Recommended for saving time)</p>"},{"location":"Playbooks/ShutDownAllEC2EqualIntervalsOfTime/#2-automated-using-cloudformation-iaac-template","title":"2. Automated using CloudFormation IaaC Template","text":"<p>I like automating things. So here is the how to achieve this</p> <ol> <li>Create an IAM Role for CloudFormation to deploy stacks and create resources. Skip if you already have a role.</li> <li>GoTo AWS Console. Goto ClouFormation and Create a Stack.</li> <li>Pass Params to CloudFormation</li> <li>Select IAM Role for CloudFormation to create stacks.</li> <li>Checkbox CAPABILITY IAM as Ticked</li> <li>Deploy Stack. Wait for Stack to deploy.</li> <li>Check for ec2 instances if they are running or stopped.</li> </ol>"},{"location":"Snippets/Snippets1/","title":"Snippets Set 1","text":""},{"location":"Snippets/Snippets1/#snippets","title":"Snippets","text":""},{"location":"Snippets/Snippets1/#clean-jenkins-build-history","title":"Clean Jenkins Build History","text":"<pre><code>def jobName = \"folder_name/job_name\"\ndef job = Jenkins.instance.getItemByFullName(jobName)\njob.getBuilds().each { it.delete() }\njob.nextBuildNumber = 1\njob.save()\n</code></pre>"},{"location":"Snippets/Snippets1/#read-a-trailing-file-read-end-of-a-file","title":"Read a trailing file, Read end of a file","text":"<pre><code>tail -f /var/log/folder/file.log\n\nclear; tail -n 50 /var/log/folder/file.log\n\nclear; tail -n 100 /var/log/folder/file.log\n</code></pre>"},{"location":"Snippets/Snippets1/#disable-root-login","title":"Disable root login","text":"<pre><code>sed -i 's/PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config;\nservice sshd restart \n</code></pre>"},{"location":"Snippets/Snippets1/#replace-a-word-in-a-file-using-python","title":"Replace a word in a file using python","text":"<pre><code>import sys \nwith open(sys.argv[1], 'r') as file :\n  filedata = file.read()\nfiledata = filedata.replace(sys.argv[2], sys.argv[3])\nwith open(sys.argv[1], 'w') as file:\n  file.write(filedata)\n</code></pre> <pre><code>python3 python-file.py file-name.txt REPLACE_ARG_A WITH_ARG_B\n</code></pre>"},{"location":"Snippets/Snippets1/#python-read-a-json-file-modify-and-save-it","title":"Python read a Json file, modify and save it","text":"<pre><code>import json\nimport os\nimport sys\n\n\nfilename = sys.argv[3]+'/folder/file.json'\nwith open(filename, 'r') as f:\n    data = json.load(f)\n    data['A'][sys.argv[1]]={}\n    data['A'][sys.argv[1]]['B'] = sys.argv[1] \n    data['A'][sys.argv[1]]['C'] = sys.argv[2] \n\nos.remove(filename)\nwith open(filename, 'w') as f:\n    json.dump(data, f, indent=4)\n</code></pre>"},{"location":"Snippets/Snippets1/#jenkins-run-a-job-remotely","title":"Jenkins Run a Job remotely","text":"<p>You need to pass 2 tokens to execute your job remotely. You need: 1. apiToken to authenticate your identity. This value is created from JENKINS_URL/me/configure . Also check here for documentation 2. Another Job authentication token which you create when you enable 'Trigger builds remotely'. Below is a sample you can tweak to get it done. </p><pre><code>PARAM1_VALUE=&lt;param1_value&gt;\nPARAM2_VALUE=&lt;param2_vale&gt;\nUSERNAME=dummy_user_name\nJENKINS_URL=\"http://10.xxx.x.xxx:8080\"\nJOB_TOKEN=\"&lt;value&gt;\" # you create this token when you enable Job&gt;Configure&gt;Build Triggers&gt;Trigger builds remotely\nLOGIN_API_TOKEN=\"&lt;value&gt;\" #get this value from JENKINS_URL/me/configure \n\ncurl -g -L --user $USERNAME:$LOGIN_API_TOKEN \"$JENKINS_URL/job/JobName/buildWithParameters?token=$JOB_TOKEN&amp;param1_name=$PARAM1_VALUE&amp;param2_name=$PARAM2_VALUE\"\n</code></pre> -g or --globoff to avoid issues of passing parameters with \"'\" or brackets to curl<p></p>"},{"location":"Tutorials/AnsibleAWS/","title":"Setup Ansible","text":""},{"location":"Tutorials/AnsibleAWS/#quick-start-ansible-for-aws","title":"Quick Start Ansible for AWS","text":""},{"location":"Tutorials/AnsibleAWS/#starter-ansible-template-for-aws","title":"Starter Ansible template  for AWS","text":"<p>Create a host and a managed-node</p> <p>Then install ansible inside host. Below command is for Amazon linux2. </p><pre><code>sudo amazon-linux-extras install ansible2\n</code></pre> Verify ansible is installed <pre><code>ansible --version\n</code></pre> Copy contents of pem file to host (Assuming you created managed-node on AWS and you downloaded your .pem file with which you can SSH to your managed-node). Read the contents of .pem file and copy-paste to a new file <code>key.pem</code>. You can use vim or nano editor to paste contents. You need to reduce the permission of your key file. <pre><code> chmod 400 key.pem \n</code></pre> Now in your ansible host machine. Add key file to ssh-agent. <pre><code>ssh-agent bash\ncp key.pem ~/.ssh/\nchmod 400 ~/.ssh/key.pem\nssh-add ~/.ssh/key.pem\n</code></pre> Create inventory file <code>inventory.txt</code>. Inventory file is used to store hosts meta-data. Here we are explicityly creating a host file but the default host file is located in <code>/etc/ansible/hosts</code> <p></p> <p>Create  host file </p><pre><code>touch inventory.txt\n</code></pre> Inside the file paste <pre><code>myservers ansible_host=54.242.242.100 ansible_connection=ssh ansible_user=ec2-user\n</code></pre> Try to ping the host and check if you have a successful connection <pre><code> ansible myservers -m ping -i inventory.txt\n</code></pre><p></p> <p>make sure you are in the same session in which you added bash key, if not you may want to do again <code>ssh-agent bash</code> &amp; <code>ssh-add ~/.ssh/key.pem</code></p> <p>&lt;!-- add your hosts to the file </p><pre><code>[myservers]\n35.175.171.151 --&gt;\n&lt;!-- ``` --&gt;\nNow run the playbook\n```bash\nansible-playbook install-nginx.yaml -vv\n</code></pre> Ansible will start a nginx server in your managed-node. If Ansible successfully deployed nginx and you are still cannot open your nginx site on your managed-mode, try to check your security groups, network settings and firewall settings.<p></p>"},{"location":"Tutorials/GenerateKeysAndSSH/","title":"Generate SSH Key pair & Add to Agent","text":""},{"location":"Tutorials/GenerateKeysAndSSH/#ssh-from-one-ec2-to-another-ec2-generate-key-and-ssh-from-one-vm-to-another-vm","title":"SSH from one ec2 to another ec2. Generate key and SSH from one VM to another VM.","text":""},{"location":"Tutorials/GenerateKeysAndSSH/#step-1","title":"Step 1","text":"<p>Generate key in your client machine/laptop </p><pre><code>ssh-keygen -t ed25519 -a 100 -C [add a comment or username]\n</code></pre> or non-interactively <pre><code>FILENAME=ssh_key\nssh-keygen -t ed25519 -a 100 -C $FILENAME -f ~/.ssh/$FILENAME -N ''\n</code></pre><p></p>"},{"location":"Tutorials/GenerateKeysAndSSH/#step-2-linux-mac","title":"Step 2: Linux &amp; Mac","text":"<p>Add the key to your ssh-agent. Doing this will make life easier. You will not have to provide a private key during ssh in the terminal </p><pre><code>eval $(ssh-agent -s)\n</code></pre><p></p> <pre><code>ssh-add ~/.ssh/id_rsa\n</code></pre>"},{"location":"Tutorials/GenerateKeysAndSSH/#step-2-windows","title":"Step 2: Windows","text":"<pre><code># By default the ssh-agent service is disabled. Allow it to be manually started for the next step to work.\n# Make sure you're running as an Administrator.\nGet-Service ssh-agent | Set-Service -StartupType Manual\n\n# Start the service\nStart-Service ssh-agent\n\n# This should return a status of Running\nGet-Service ssh-agent\n\n# Now load your key files into ssh-agent\nssh-add ~\\.ssh\\id_rsa\n</code></pre>"},{"location":"Tutorials/GenerateKeysAndSSH/#step-3","title":"Step 3","text":"<p>Now copy the contents of the file <code>id_rsa.pub</code> to the clipboard. </p><pre><code>cat ~/.ssh/id_rsa.pub\n</code></pre><p></p>"},{"location":"Tutorials/GenerateKeysAndSSH/#step-4","title":"Step 4","text":"<p>In the remote server in which you want to SSH/setup SSH. It might sound funny/confusing, but yes you need to access this system (i.e. login with SSH or user-password) and modify some files. Without this, you cannot proceed further.</p> <pre><code>echo \"PASTE CONTENTS OF id_rsa.pub FILE HERE\" &gt;&gt; ~/.ssh/authorized_keys\n</code></pre>"},{"location":"Tutorials/GenerateKeysAndSSH/#step-5","title":"Step 5","text":"<p>Now everything is ready You can now ssh from your client to a remote machine with just one command. Replace <code>username</code> with your remote machine username and replace your IP address.  </p><pre><code>ssh [USERNAME]@[IP]\n</code></pre><p></p>"},{"location":"Tutorials/KubernetesWithKubeadm/","title":"Install Kubernetes with KubeAdm","text":""},{"location":"Tutorials/KubernetesWithKubeadm/#kubernetes-cluster-using-kubeadm","title":"Kubernetes Cluster using kubeadm","text":""},{"location":"Tutorials/KubernetesWithKubeadm/#_1","title":"\u2192","text":"<p>Check connectivity between master and slave </p><pre><code>ping IP\n</code></pre> Disable swap <pre><code>sudo swapoff -a  \ncat /proc/meminfo | grep 'SwapTotal'\nfree -h\n</code></pre> prepare <pre><code>sudo apt get update\nsudo apt install -y net-tools vim git curl wget netcat\n</code></pre><p></p> <p>sudo which nft &gt;/dev/null &amp;&amp; echo nftables is enabled in this system || echo ufw is enabled in this system</p>"},{"location":"Tutorials/KubernetesWithKubeadm/#_2","title":"\u2192","text":"<p>On Control Panel aka master node allow relavent ports </p><pre><code>sudo which nft &gt;/dev/null &amp;&amp; echo nftables is enabled in this system || echo ufw is enabled in this system\n\nnc 127.0.0.1 6443\nsudo netstat -tulpn | grep LISTEN\nnc -zv  127.0.0.1 22\nnc -zv  127.0.0.1 6443\nnetstat -lntu\nss -lntu\n\nsudo apt install ufw\nsudo ufw default allow outgoing\nsudo ufw allow ssh\nsudo ufw allow 6443\nsudo ufw allow 2379:2380/tcp\nsudo ufw allow 30000:32768/tcp\nsudo ufw allow 10250\nsudo ufw allow 10259\nsudo ufw allow 10257\nsudo ufw enable\nsudo ufw status\n</code></pre><p></p> <p>On Worker node(s) relavent ports </p><pre><code>netstat -lntu\nss -lntu\n\nsudo apt install ufw\nsudo ufw default allow outgoing\nsudo ufw allow ssh\nsudo ufw allow 10250\nsudo ufw allow 30000:32767/tcp\nsudo ufw enable\nsudo ufw status\n</code></pre><p></p>"},{"location":"Tutorials/KubernetesWithKubeadm/#_3","title":"\u2192","text":"<p>Install docker from the given link Install Docker</p>"},{"location":"Tutorials/KubernetesWithKubeadm/#_4","title":"\u2192","text":"<p>For Docker you need to install cri-dockerd </p><pre><code>git clone https://github.com/Mirantis/cri-dockerd.git\n</code></pre><p></p> <p>To install cri-dockerd you need to install Go programming Language Download and install Go specific to your CPU architecture After installing go </p><pre><code>echo \"export PATH=$PATH:/usr/local/go/bin\" &gt;&gt; ~/.profile \nsource ~/.profile \ngo version\n</code></pre> Compile and install <code>cri-dockerd</code><p></p>"},{"location":"Tutorials/KubernetesWithKubeadm/#_5","title":"\u2192","text":"<p>Forwarding IPv4 and letting iptables see bridged traffic</p>"},{"location":"Tutorials/KubernetesWithKubeadm/#_6","title":"\u2192","text":"<p>Installing kubeadm, kubelet and kubectl</p>"},{"location":"Tutorials/KubernetesWithKubeadm/#_7","title":"\u2192","text":"<p>After installation kubeadm init </p><pre><code>sudo kubeadm init --pod-network-cidr=192.168.0.0/16 --control-plane-endpoint=172.31.0.47 --cri-socket=unix:///var/run/cri-dockerd.sock\n</code></pre> * <code>--pod-network-cidr=192.168.0.0/16</code> because Calico supports 192.168.0.0/16 and I can use Acalico  <p></p> <p>Install Calico to provide both networking and network policy for self-managed on-premises deployments. * <code>--cri-socket=unix:///var/run/cri-dockerd.sock</code> pass cri socket for cri-dockerd * <code>--control-plane-endpoint=172.31.0.47</code> private Ip here </p><pre><code>kubectl get pods -A\n</code></pre><p></p>"},{"location":"Tutorials/KubernetesWithKubeadm/#_8","title":"\u2192","text":"<p>After kubeadm init follow the output given by the command</p>"},{"location":"Tutorials/KubernetesWithKubeadm/#_9","title":"\u2192","text":"<p>Setup Calico Install Calico networking and network policy for on-premises deployments directly jump to Install Calico Manifest Tab and follow \"Install Calico with Kubernetes API datastore, 50 nodes or less\" </p><pre><code>kubectl get pods -A\n</code></pre> <pre><code>kubectl get pods -A --watch\nkubectl get namespaces\nkubectl get all -n kube-system\n</code></pre><p></p>"},{"location":"Tutorials/KubernetesWithKubeadm/#_10","title":"\u2192","text":"<p>On the Worker Node * Install docker and <code>docker-cri</code> * Install kubeadm, kubelet and kubectl </p><pre><code>sudo kubeadm join IP:6443 --token TOKEN --discovery-token-ca-cert-hash CERT --cri-socket=unix:///var/run/cri-dockerd.sock\n</code></pre> Dont forget to pass <code>--cri-socket=unix:///var/run/cri-dockerd.sock</code><p></p>"},{"location":"Tutorials/KubernetesWithKubeadm/#more-references","title":"\u2192 More References","text":"<p>kubeadm join after link is expired</p>"},{"location":"Tutorials/LinuxCommands/","title":"Linux Commands","text":""},{"location":"Tutorials/LinuxCommands/#linux-commands","title":"Linux Commands","text":""},{"location":"Tutorials/LinuxCommands/#linux-command-cheat-sheet-revision-for-interviews","title":"Linux Command Cheat Sheet &amp; Revision for Interviews","text":""},{"location":"Tutorials/LinuxCommands/#tree","title":"tree","text":"<p><code>tree</code> command shows the directory structure in a tree format. Very useful for visualization. </p><pre><code>sudo snap install tree\ntree .\n</code></pre> Output <pre><code>.\n\u251c\u2500\u2500 a\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 b\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 c\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 d\n\u251c\u2500\u2500 file.txt\n\u251c\u2500\u2500 input.txt\n\u2514\u2500\u2500 snap\n    \u2514\u2500\u2500 tree\n        \u251c\u2500\u2500 18\n        \u251c\u2500\u2500 common\n        \u2514\u2500\u2500 current -&gt; 18\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#curl-ifconfigme","title":"curl ifconfig.me","text":"<pre><code>curl ifconfig.me\n</code></pre> It is used to get your current IPv4"},{"location":"Tutorials/LinuxCommands/#top","title":"top","text":"<p><code>top</code> is an interactive tool. It shows the processes running in your system. It also shows hardware details like CPU usage, RAM Usage, swap memory usage, and no of tasks running. </p><pre><code>top\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#htop","title":"htop","text":"<p><code>htop</code> is a similar tool to <code>top</code> with some more features added like colours, bars etc. It is an interactive tool.   </p><pre><code>htop\n</code></pre><p></p>"},{"location":"Tutorials/LinuxCommands/#pushd-popd-dir","title":"pushd popd dir","text":"<p>pushd and popd both are a combination of commands that are used to navigate file-system very similar to cd command. Their special feature is that they can store your paths in a stack </p><pre><code>pushd my-folder-1-path # change my directory to folder 1\npushd my-folder-2-path # change my directory to folder 2\npushd my-folder-3-path # change my directory to folder 3\n# You are currently in folder 3 and folder-2 and folder-1 are also in stack\n# Now you can go back to folder-2 using\npopd\n# Now you can go back again to folder-1 using\npopd\n</code></pre> <code>pushd</code> &amp; <code>popd</code> are used when you are navigating FS and want to go back to your previous folder quickly. It is conceptually a stack. <p></p>"},{"location":"Tutorials/LinuxCommands/#cron-cronjob-crontab","title":"cron cronjob crontab","text":"<p>Cron is a system to schedule and automate a task. Say you want to run a program every 5 minutes you can do it using cron.  </p> <p>Cronjob is the actual task defined in the system. While cron can be considered a concept/program, cronjob is the actual entry in the system that will do the work. </p> <p>Crontab is a table that is defined in a file. This file contains a list of all jobs. </p><pre><code>crontab -e # edit file to add cron jobs\ncrontab -l # list all automated jobs\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#free","title":"free","text":"<p><code>free</code> command gives you details about the Primary Memory(RAM) and swap memory. </p><pre><code>free\nfree -h # h for human readable\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#ps","title":"ps","text":"<p>ps is Process Status ps command gives you the list of the running processes and their PIDs. The ps command is non-interactive and can be used with shell scripts. </p><pre><code>pa -A # Get all processes\nps -a # get all processes not associated with a terminal\nps -u # view processes along with their owner \nps -x #view process owned by current user(you)\n</code></pre> <pre><code>ps -aux \n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#difference-between-jobs-ps-top-and-htop","title":"Difference between jobs, ps, top and htop","text":"<p>jobs give the processes that are attached to the current terminal/shell.</p> <p>ps is non-interactive and can be used with shell scripts.</p> <p>top is interactive </p> <p>htop is an advanced form of top</p>"},{"location":"Tutorials/LinuxCommands/#difference-vi-and-vim","title":"difference vi and vim","text":"<p>vim is vi improved. Both of them are text editors. Vim is an extended form of vim with more functionalities. For example, vim supports multi-level undo and redo.</p>"},{"location":"Tutorials/LinuxCommands/#keep-ssh-session-alive","title":"Keep SSH session Alive","text":"<p>Does your SSH session breaks? Here is a one-time fix </p><pre><code>ssh -o ServerAliveInterval=60 -i ~/path/key.cer  ubuntu@xx.xx.xxx.xx\n</code></pre><p></p>"},{"location":"Tutorials/LinuxCommands/#anacron","title":"anacron","text":"<p><code>Anacron</code> is related to <code>cron</code> but has a lot of differences. Anacron is used to schedule tasks. It has an advantage over cron, it can run tasks even after the system was shut down, the next time system starts. It has a disadvantage over cron. Its time granularity is low. Cron has accuracy in minutes but anacron has accuracy in days. Use case: You might want to back up your favourite local folder to the cloud, you are not in a hurry if your backup is done a few hours later or tomorrow.</p>"},{"location":"Tutorials/LinuxCommands/#chmod","title":"chmod","text":"<p>chmod is change mode. chmod command is used to change the permission of a file. It can change the read, write and execute permission of users, groups and others.  chmod and chown are very important and require learning and practice. </p><pre><code>chmox +x file.sh # Add execute permission to a file\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#chown","title":"chown","text":"<p>chown command is used to change the owner of a file Example: If in a system there are users say, Rick and Morty. Morty created a file and he is the owner. Now to change the owner to Rick you would do </p><pre><code>chown Rick filename.txt\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#uptime","title":"uptime","text":"<p>It gives how long the system has been running. </p>"},{"location":"Tutorials/LinuxCommands/#cal","title":"cal","text":"<p>It gets the calendar of the current month in the terminal. </p><pre><code>cal\n</code></pre> <pre><code>    January 2022\nSu Mo Tu We Th Fr Sa\n                   1\n 2  3  4  5  6  7  8\n 9 10 11 12 13 14 15\n16 17 18 19 20 21 22\n23 24 25 26 27 28 29\n30 31\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#sleep","title":"sleep","text":"<p>Create a thread that does nothing for n seconds. Use it to create a delay in your shell script or start a useless process. </p><pre><code>sleep 500\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#run-a-command-in-the-background-using","title":"run a command in the background using '&amp;'","text":"<p>You can run a command line process in the background by ending it with <code>&amp;</code> </p><pre><code>python3 program.py &amp;\n</code></pre> or <pre><code># Create a thread that does nothing for 500 seconds and send it to the background\nsleep 500 &amp;\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#jobs","title":"jobs","text":"<p>The <code>jobs</code> commands keep track of all the processes running in the background and foreground by the shell. </p>"},{"location":"Tutorials/LinuxCommands/#ctrl-z","title":"Ctrl + z","text":"<p>Ctrl + z pauses/suspends a program. You can start the same program in the foreground using <code>fg</code> command or you can run it in the background using <code>bg</code> command.</p>"},{"location":"Tutorials/LinuxCommands/#fg","title":"fg","text":"<p><code>fg</code> stands for foreground. You can bring back a process in the foreground that was running in the background or you can resume a suspended process using <code>fg</code> command. If there are multiple processes then you might want to pass parameters also like <code>fg 3</code> for the third process. </p><pre><code>fg\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#bg","title":"bg","text":"<p><code>bg</code> stands for background. You can resume a suspended process in the background using the bg command. If there are multiple processes then you might want to pass parameters also like <code>bg 2</code> for the second process.  </p><pre><code>bg\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#difference-between-bash-vs-shell","title":"Difference between bash vs shell","text":"<p>Bash is an extended form of the shell. It has more features than shell like endless logs and better compatibility with interactive tools like vim and nano. bash is located in <code>/bin/bash</code> and the shell is located at <code>/bin/sh</code>.</p>"},{"location":"Tutorials/LinuxCommands/#ssh","title":"ssh","text":"<p>SSH stands for Secure Shell Protocol is used to connect to remote hosts securely. It is some of the most used commands for people who engage themselves with cloud. </p><pre><code># ssh -i /path/to/public_key_file [user]@[IP]\n\nssh -i ./practise.pem ubuntu@3.91.160.159\n</code></pre> if you ssh very frequently and do not want to use the -i command repeatedly then follow https://github.com/anandshivam44/DevOpsAutomation/blob/main/GenerateKeysAndSSH.md <pre><code>ssh ubuntu@3.91.160.159\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#ping","title":"ping","text":"<p>Ping is used for checking the network connectivity to a specified address or IP. </p><pre><code>ping github.com\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#kill","title":"kill","text":"<p>It is used to terminate or kill a process manually. Example: You get the PID of a process via <code>ps -A</code> command and you terminate the process by </p><pre><code>kill PID\n</code></pre><p></p>"},{"location":"Tutorials/LinuxCommands/#du-sh-var","title":"du -sh /var/","text":"<p>gives the disk space occupied by a directory in human-readable format </p><pre><code>du -sh /var/\n</code></pre> Get all files and folders size of a Folder <pre><code>du -sh /var/*\n</code></pre> Get all files and folders size of a Folder &amp; Sort by ascending order <pre><code>du -sh /var/* | sort -h\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#grep","title":"grep","text":"<p>It is a very popular command in Linux. This command is used to search for a text/pattern in a command output or text/pattern in a file. Example: To find in history all the chmod commands you used. </p><pre><code>#pipe the output of the history command to grep which will search for sed commands.\nhistory | grep sed\n</code></pre> <pre><code>#find all processes associated with python\nps -aux | grep python\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#pkill","title":"pkill","text":"<p>pkill command is used to kill a process by its name or partial name and not by its PID number Example: There is a python program running. You can terminate it by </p><pre><code>pkill python\n</code></pre><p></p>"},{"location":"Tutorials/LinuxCommands/#sed","title":"sed","text":"<p>sed stands for stream editor. It is mostly used to find a replace a word or regex pattern in a file without opening it in any editor like nano, vim, vi. It can also do tasks like insertion, deletion and searching based on regex patterns. Example: replace all Unix in a file with Linux </p><pre><code> sed -i 's/unix/linux/g' geekfile.txt\n</code></pre> <code>s</code>: substitute <code>g</code>: do the operation globally <p></p>"},{"location":"Tutorials/LinuxCommands/#soft-link-ln-s","title":"soft link ln -s","text":"<p>Softlinks are like Desktop shortcuts you had in your Windows PC. They point to a file. They just store the path of another file and pretend to behave like the original file but they aren't. Softlinks are called symbolic links. size of a soft link is in bytes or KB because they just store the path of a file. If you delete the actual file in the disk then the soft link file will be pointing to null(nothing) and will have no relevance.</p> <pre><code># ln -s {source-filename} {symbolic-filename}\nln -s file1 shortcut_file\n</code></pre>"},{"location":"Tutorials/LinuxCommands/#hard-link-ln","title":"hard link ln","text":"<p>Every file in Linux has an inode number. This inode number points to an object in the disk. When you see a file in file explorer. It is just pointing to the object using its Inode Number. When you create a hard link, you can see another that points to the same object using the same inode number. Both the files are the same just different representations. Both files show the same content. If one of them is deleted the other file remains.</p> <p>The size of a hard link is the actual size of the file because it points to an inode number object in the disk</p> <pre><code># ln {original-filename} {hardlink-filename}\nln file1 shortcut_file\n</code></pre>"},{"location":"Tutorials/LinuxCommands/#rsync","title":"rsync","text":"<p>rsync is remote synchronization. Used to sync files between two remote directories. It can also be used to copy files to your local machine.</p> <p>It is very useful when you are copying a very large folder. Even if copying breaks in between you can re-run the rsync command and locally it will be like a resume feature.</p> <pre><code>rsync ~/local-file.txt user@remote-host:~/remote-file.txt\n\nrsync -vh ~/local-folder user@remote-host:~/remote-folder\n\nrsync -vh ~/local-folder-1 ~/local-folder-2\n</code></pre>"},{"location":"Tutorials/LinuxCommands/#what-is-devnull","title":"What is /dev/null?","text":"<p>To understand easily, assume <code>/dev/null</code> is a Black Hole. You can direct the output of any command in scripts to dev/null but it will not be saved anywhere and will not occupy any disk space. Use case: If you direct the output of a script to a file then the error message will be output to a file and your terminal will not show any error. So in our case <code>/dev/null</code> is a file. A file that doesn't save anything &amp; doesn't occupies space directs all spam and noise to this file.</p>"},{"location":"Tutorials/LinuxCommands/#what-is-21","title":"what is 2&gt;&amp;1","text":"<p>We use <code>2&gt;&amp;1</code> at the end of bash or shell commands/scripts to redirect the stderr to stdout. Descriptor 1 stands for standard output and descriptor 2 stands for standard output. It is used to suppress errors by showing it in output and avoiding breaking our script. </p><pre><code>cp abcd.txt ./not-a-folder 2&gt;&amp;1\n</code></pre> The difference between the return value is that the first one is an error while the second value is an output <p></p>"},{"location":"Tutorials/LinuxCommands/#ifconfig","title":"ifconfig","text":"<p>The full form of ifconfig is Interface Configuration. It is used to get and change the network configuration of the system. In the below, we can see that our internal IP of the system is 172.31.84.251 </p><pre><code>sudo apt install net-tools\nipconfig\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#difference-between-bash_profile-bashrc","title":"Difference between .bash_profile &amp; .bashrc","text":"<p><code>.bash_profile</code> is a hidden file which always executes when a user opens a new shell/BASH session but it doesn't execute when a shell script is invoked by another process  </p> <p><code>.bashrc</code> is a hidden file. It always executes when an interactive or non-interactive shell session starts.</p> <p>Similarly, for mac users, we have <code>.zprofile</code> <code>.zshrc</code> with the same behaviour.</p>"},{"location":"Tutorials/LinuxCommands/#wc","title":"wc","text":"<p>It is used to find out the number of words in a line. <code>wc</code> stands for word count.  </p> <p>Default output gives <code>the number of lines,</code>no of words, <code>the number of characters in the file</code></p> <p></p>"},{"location":"Tutorials/LinuxCommands/#nohup","title":"nohup","text":"<p>nohup is <code>No hangup</code> nohup gives the best way to run a process in the background. it allows running a process in the background even if the terminal session is closed or the SSH tunnel breaks. Example: you have a shell script <code>my-script.sh</code> which you want to run in the background </p><pre><code># nohup ANY_BASH_COMMAND &amp;\nnohup sh my-script.sh &amp; # run a program in the background\nnohup sh my-script.sh &gt; output.log &amp; # run a program in the background and send output to a file\n</code></pre> nohup makes running commands over SSH connections reliable. Imagine you ran a critical shell script and the connection breaks and your script didn't complete. <p></p>"},{"location":"Tutorials/LinuxCommands/#env","title":"env","text":"<p>It is used to print all BASH environment variables </p><pre><code>env\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#vmstat","title":"vmstat","text":"<p><code>vmstat</code> stands for Virtual Memory Statistics. It provides system information like memory, paging, processes, IO, CPU, and disk scheduling. </p><pre><code>vmstat\n</code></pre><p></p> <p></p>"},{"location":"Tutorials/LinuxCommands/#tree_1","title":"tree .","text":"<p>The <code>tree</code> command is used to get a directory structure in the form of a tree. Paste output in your GitHub Readme to make your project directory easy to understand for a second person.  </p>"},{"location":"Tutorials/LinuxCommands/#umask","title":"umask","text":"<p>umask command is used to set the default permission for new files. The default mask for a non-root user is 002, changing the folder permissions to 775 (777-002=775 rwxrwxr-x), and file permissions to (666-002=664)664 (rw-rw-r--) </p>"},{"location":"Tutorials/LinuxCommands/#netstat-tulpn-grep-listen","title":"netstat -tulpn | grep LISTEN","text":"<p>Use <code>netstat -tulpn | grep LISTEN</code> to get the list of all open ports. Helpful when working with docker images, port binding, and deploying Restful APIs to get the ports that are already busy or to check which port you have deployed your API. </p><pre><code>sudo netstat -tulpn | grep LISTEN\n</code></pre>  Other similar commands <pre><code>sudo ss -tulpn\nsudo lsof -i -P -n | grep LISTEN\n</code></pre><p></p>"},{"location":"Tutorials/LinuxCommands/#dmesg","title":"dmesg","text":"<p><code>dmesg</code> stands for driver message. It gets boot time logs. If your system faces a boot time error. You can read the logs and try to identify the error. Boot time logs: dmesg </p>"},{"location":"Tutorials/LinuxCommands/#empty-a-file-fast","title":"Empty a file fast","text":"<p>When you are working on servers there are no IDEs and you have to use <code>vim</code> or <code>nano</code> to edit a file. But if you want to just empty a file then the fastest way is </p><pre><code>echo \"\" &gt; file.txt\n</code></pre> using vim and nano in this situation could be tedious.<p></p>"},{"location":"Tutorials/LinuxCommands/#what-is-the-shebang-line-in-shell-scripting","title":"What is the shebang line in shell scripting?","text":"<p>Scripting can be done using python, shell, BASH, Perl etc. Now you can define at the start of a script file which interpreter or command to use to run the file.  </p> <p>For example Bash scripts can have this at the start of the file to specify the path of bash to use. </p><pre><code>#!/bin/bash\n.\n.\n.\ncommands..\n.\n.\n.\n</code></pre> or <pre><code>#!/usr/bin/bash\n</code></pre> or <pre><code>#!/usr/bin/env bash\n</code></pre> shell can have <pre><code>#!/bin/sh\n</code></pre> or <pre><code>#!/usr/bin/sh\n</code></pre> python <pre><code>#!/usr/bin/python\n</code></pre> or a specific version of python <pre><code>#!/usr/bin/python3.9\n</code></pre> ruby <pre><code>#!/usr/bin/ruby\n</code></pre> PHP <pre><code>#!/usr/local/bin/php\n</code></pre><p></p>"},{"location":"Tutorials/LinuxCommands/#read-input-from-a-file-and-print-output-to-a-file","title":"Read input from a file and print output to a file","text":"<p>You can pass input to a file and then print the output from the program to a file. Helpful when you have large outputs or large outputs and want to run programs faster. </p><pre><code>cat input.txt | python3 my-program.py &gt; output.txt\n</code></pre><p></p>"},{"location":"Tutorials/LinuxCommands/#base64","title":"base64","text":"<p>Linux Systems encode and decode data for I/O and data transmission. Please note that encoding and decoding are not similar to encryption and decryption.</p> <p>All Linux systems use <code>base64</code> for encoding and decoding. base64 is used internally and for the general purpose, a user doesn't need to bother about it, but in some cases, a developer might need to provide raw input to a file in such cases we need to encode input and pass input. </p> <p>To encode data: </p><pre><code>echo  'A B C D' | base64\n</code></pre> To decode data <pre><code>echo  'QSBCIEMgRAo=' | base64 --decode\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#df-i","title":"df -i","text":"<p>Linux Systems recognizes files with Inode Numbers and not with names. The no of available Inode Numbers gives the maximum number of files that can be accommodated in the disk or file system.  Use <code>df -i</code> to get the available node number </p><pre><code>df -i\n</code></pre> <p></p>"},{"location":"Tutorials/LinuxCommands/#sticky-bits-in-linux-permission","title":"sticky bits in linux permission","text":"<p>sticky bits are useful when there is a shared folder for multiple users/groups. A sticky bit will restrict deleting a file created by user A by another user B and vice versa. </p><pre><code>chmod +t folder_name\n</code></pre><p></p>"},{"location":"Tutorials/LinuxCommands/#find","title":"find","text":"<p>find command is used to find files or patterns inside a file.  For example, you want to find a file name 'image.png' </p><pre><code>find . -name image.png\n</code></pre>  Example 2: you want to find a text inside all files in a folder <pre><code>find . -name '*.txt' -exec grep -i 'string to search for' {} \\; -print\n</code></pre><p></p>"},{"location":"Tutorials/LinuxCommands/#what-is-the-return-code-in-bashshell-scripts","title":"What is the return code in bash/shell scripts?","text":"<p>There are 256 return codes ranging from 0 - 255 Every Bash script has a return code. The code could be as follows:- 0 for success 1 - 255 for different types of error</p>"},{"location":"Tutorials/LinuxCommands/#difference-between-binsh-binbash","title":"Difference between /bin/sh /bin/bash","text":"<p>sh/Shell is an interface between the User and Linux Kernel. Bash is just Shell with more features. Bash is the default Scripting Tool provided in most Linux terminals.  Bash is located at <code>/bin/bash</code> and shell at <code>/bin/sh</code>. To run a command with shell explicitly you would use  </p><pre><code>/bin/sh shell-script.sh\n</code></pre><p></p>"},{"location":"Tutorials/LinuxCommands/#ctrl-r-windows-and-linux","title":"Ctrl + r (Windows and Linux)","text":"<p>Ctrl+R: Recall the last command matching the characters you provide. It will search BASH/sh history with the matching works you type. Helps save a lot of time and you should definitely learn to use it.</p>"},{"location":"Tutorials/LinuxCommands/#linux-ssh-without-entering-password","title":"Linux SSH without entering password","text":"<pre><code>sshpass -p PASSWORD ssh user@IP\n</code></pre>"},{"location":"Tutorials/S3ConfigurationsforAuditCompliance/","title":"S3ConfigurationsforAuditCompliance","text":"<p>You can use these configurations for any s3 bucket that is subject to External Audit, Internal Audit, Very Hardened Security or extremely important bucket</p> <p>Enable s3 versioning Create a second bucket for storing all the Logs Enable Server Logging Enable AWS Backup Apply Strict IAM Policy Enable CloudTrail for Data Events</p>"},{"location":"Tutorials/SSHToDocker/","title":"SSH to Docker","text":""},{"location":"Tutorials/SSHToDocker/#ssh-to-docker-container-from-host-and-from-outside-the-host-remotely","title":"SSH to Docker Container from Host and from outside the Host Remotely","text":""},{"location":"Tutorials/SSHToDocker/#docker-port-binding-example","title":"Docker Port Binding Example","text":""},{"location":"Tutorials/SSHToDocker/#create-an-vm-in-awsgcpazure","title":"Create an VM in AWS/GCP/Azure","text":"<p>I've created an ec2 in aws with ubuntu image</p> <p>SSH into the instance </p>"},{"location":"Tutorials/SSHToDocker/#install-docker-and-docker-compose","title":"Install Docker and Docker Compose","text":"<p>Copy paste the command for Ubuntu </p><pre><code>sudo apt-get update -y\nsudo apt-get install ca-certificates curl gnupg -y\nsudo install -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\nsudo chmod a+r /etc/apt/keyrings/docker.gpg\necho \\\n  \"deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  \"$(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\")\" stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update -y\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y\nsudo apt install docker-compose -y\n</code></pre><p></p>"},{"location":"Tutorials/SSHToDocker/#test-docker-installation","title":"Test Docker Installation","text":"<pre><code>sudo docker run hello-world\n</code></pre>"},{"location":"Tutorials/SSHToDocker/#add-docker-to-sudoer","title":"Add docker to sudoer","text":"<pre><code>sudo groupadd docker\nsudo gpasswd -a $USER docker\nnewgrp docker\n</code></pre>"},{"location":"Tutorials/SSHToDocker/#create-ssh-key-pair-in-host-machine","title":"Create SSH Key Pair in Host Machine","text":"<pre><code>FILENAME=docker_ssh\nssh-keygen -t ed25519 -a 100 -C $FILENAME -f ./$FILENAME -N ''\n</code></pre>"},{"location":"Tutorials/SSHToDocker/#create-dockerfile","title":"Create DockerFile","text":"<pre><code>vim DockerFile\n</code></pre> <p>Contents of DockerFile: </p><pre><code>FROM ubuntu:latest\nRUN apt update &amp;&amp; apt install  openssh-server sudo -y\n# Create a user \u201csshuser\u201d and group \u201csshgroup\u201d\nRUN groupadd sshgroup &amp;&amp; useradd -ms /bin/bash -g sshgroup sshuser\n# Create sshuser directory in home\nRUN mkdir -p /home/sshuser/.ssh\n# Copy the ssh public key in the authorized_keys file. The idkey.pub below is a public key file you get from ssh-keygen. They are under ~/.ssh directory by default.\nCOPY docker_ssh.pub /home/sshuser/.ssh/authorized_keys\n# change ownership of the key file. \nRUN chown sshuser:sshgroup /home/sshuser/.ssh/authorized_keys &amp;&amp; chmod 600 /home/sshuser/.ssh/authorized_keys\n# Start SSH service\nRUN service ssh start\n# Expose docker port 22\nEXPOSE 22\nCMD [\"/usr/sbin/sshd\",\"-D\"]\n</code></pre><p></p>"},{"location":"Tutorials/SSHToDocker/#test-docker-build-for-any-failures","title":"Test Docker Build for any failures","text":"<pre><code>docker build -f Dockerfile .\n</code></pre>"},{"location":"Tutorials/SSHToDocker/#create-docker-compose-file","title":"Create Docker Compose File","text":"<pre><code>touch docker-compose.yml\nvim docker-compose.yml\n</code></pre> <p>Contents of docker-compose.yml: </p><pre><code>version: '3'\nservices:\n  dockerssh:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    container_name: docker_ssh\n    ports:\n      - \"2022:22\"\n</code></pre><p></p>"},{"location":"Tutorials/SSHToDocker/#run-docker-compose-and-start-the-container","title":"Run Docker Compose and start the container","text":"<pre><code>docker-compose build\ndocker-compose up -d\n</code></pre>"},{"location":"Tutorials/SSHToDocker/#ssh-into-the-container-from-host","title":"SSH into the Container from Host","text":""},{"location":"Tutorials/SSHToDocker/#check-for-port-binding-verify-port-2022-of-the-host-is-bind-to-port-22-of-the-container","title":"Check for port binding. Verify port 2022 of the host is bind to port 22 of the container","text":"<pre><code>sudo ss -tulpn\nsudo lsof -i -P -n | grep LISTEN\n</code></pre>"},{"location":"Tutorials/SSHToDocker/#ssh","title":"SSH","text":"<pre><code>ssh -p 2022 -i ./docker_ssh sshuser@localhost \n</code></pre>"},{"location":"Tutorials/SSHToDocker/#ssh-using-internal-ip-directly-on-port-22","title":"SSH using Internal Ip directly on Port 22","text":"<pre><code>INTERNAL_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' docker_ssh)\necho $INTERNAL_IP\nssh -i docker_ssh sshuser@$INTERNAL_IP\n</code></pre>"},{"location":"Tutorials/SSHToDocker/#ssh-from-a-remote-location","title":"SSH from a remote location","text":"<p>Since my VM/ec2 is in a public subnet, I can SSH to the Docker Container remotely directly bypassing Docker Host. But before that you need to also copy the private key file to your laptop/pc and then</p> <p></p><pre><code>ssh -p 2022  -i ./docker_ssh sshuser@PUBLIC_IP \n</code></pre> Make sure the port 2022 is open in Security Groups attached to the VM<p></p>"},{"location":"Tutorials/SSHToDocker/#cleaning-up","title":"Cleaning Up","text":"<pre><code># Remove all Docker Running Containers\nsudo docker rm -vf $(sudo docker ps -a -q)\n# Remove all Docker Images\nsudo docker rmi -f $(sudo docker images -a -q)\n</code></pre>"},{"location":"Tutorials/SSHToDocker/#terminate-your-vm-to-avoid-cost","title":"Terminate your VM to avoid Cost","text":"<p>Delete/Terminate your VM to avoid cost</p>"},{"location":"assets/plugins/github-activity/","title":"GitHub Activity Stream Widget","text":""},{"location":"assets/plugins/github-activity/#github-activity-stream-widget","title":"GitHub Activity Stream Widget","text":"<p>This is a small Javascript plugin that creates a stream of your recent GitHub activity. It displays the user's name, username, photo, and a list of each individual activity type. Click here for a demo.</p> <p>A sample image of the activity stream is shown below:</p> <p></p>"},{"location":"assets/plugins/github-activity/#dependencies","title":"Dependencies","text":"<p>The two dependencies for the plugin are the Mustache templating library and Octicons (if you want the icons to show). You can include these along with the scripts for the plugin in the head of your page with the following HTML:</p> <pre><code>&lt;link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/octicons/2.0.2/octicons.min.css\"&gt;\n&lt;link rel=\"stylesheet\" href=\"github-activity-0.1.4.min.css\"&gt;\n\n&lt;script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/mustache.js/0.7.2/mustache.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"github-activity-0.1.4.min.js\"&gt;&lt;/script&gt;\n</code></pre> <p>The files can be downloaded from the releases page.</p> <p>If you'd like to build the files yourself:</p> <pre><code># Ensure you have grunt and bower installed\nnpm install bower\nnpm install grunt-cli\n\n# Clone the repository\ngit clone https://github.com/caseyscarborough/github-activity.git\ncd github-activity\n\n# Install dependencies\nbower install\n\n# Build dist\ngrunt\n</code></pre>"},{"location":"assets/plugins/github-activity/#usage","title":"Usage","text":"<p>To use the library, begin by creating a new div with an id in the body of your page:</p> <pre><code>&lt;div id=\"feed\"&gt;&lt;/div&gt;\n</code></pre> <p>Then call the feed method via Javascript:</p> <pre><code>GitHubActivity.feed({\n    username: \"your-username\",\n    repository: \"your-repo\", // optional\n    selector: \"#feed\",\n    limit: 20 // optional\n});\n</code></pre>"},{"location":"assets/plugins/github-activity/#credits","title":"Credits","text":"<ul> <li>MD5 Methods</li> </ul>"},{"location":"assets/plugins/github-activity/#fork-and-enjoy","title":"Fork and Enjoy","text":"<p>Please feel free to contribute to the application by following the steps below:</p> <ol> <li>Fork it</li> <li>Create your feature branch (<code>git checkout -b my-new-feature</code>)</li> <li>Commit your changes (<code>git commit -am 'Add some feature'</code>)</li> <li>Push to the branch (<code>git push origin my-new-feature</code>)</li> <li>Create new Pull Request</li> </ol>"},{"location":"assets/plugins/github-activity/LICENSE/","title":"LICENSE","text":""},{"location":"assets/plugins/github-activity/LICENSE/#the-mit-license-mit","title":"The MIT License (MIT)","text":"<p>Copyright \u00a9 2015 Casey Scarborough</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. </p>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/","title":"CHANGELOG","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#change-log","title":"Change Log","text":"<p>All notable changes to this project will be documented in this file.</p>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v320","title":"v3.2.0","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#added","title":"Added","text":"<ul> <li>Possibility to specify the date locale via moment.js</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v310","title":"v3.1.0","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#changed","title":"Changed","text":"<ul> <li>Re-added support for SSL</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v301","title":"v3.0.1","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#changed_1","title":"Changed","text":"<ul> <li>Use www.feedrapp.info instead of feedrapp.info</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v300","title":"v3.0.0","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#changed_2","title":"Changed","text":"<ul> <li>Replace Google Feed API with feedr</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v200","title":"v2.0.0","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#changed_3","title":"Changed","text":"<ul> <li>moment.js is now optional</li> <li>Please note that the format of dates might change when moment.js is available and no <code>dateFormat</code> option is specified. In that scenario all dates will be transformed to the format <code>dddd MMM Do</code>.</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v151","title":"v1.5.1","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#fixed","title":"Fixed","text":"<ul> <li>moment.js deprecation warning</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v150","title":"v1.5.0","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#added_1","title":"Added","text":"<ul> <li><code>onData</code> callback which gets triggered after receiving the data but before the rendering.</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v140","title":"v1.4.0","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#added_2","title":"Added","text":"<ul> <li>Pass the feeds meta data to the tokens object.</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v130","title":"v1.3.0","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#added_3","title":"Added","text":"<ul> <li>Error and success callback. (thanks to eliten00b)</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#fixed_1","title":"Fixed","text":"<ul> <li>forEach loop. (thanks to aegisrunestone)</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v120","title":"v1.2.0","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#added_4","title":"Added","text":"<ul> <li>Possibility to define effects for the appearance of entries</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v110","title":"v1.1.0","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#added_5","title":"Added","text":"<ul> <li>XSS protection</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#changed_4","title":"Changed","text":"<ul> <li>Switched to busterjs for tests</li> <li>Implemented tests for XSS protection</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v100","title":"v1.0.0","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#changed_5","title":"Changed","text":"<ul> <li>Complete test coverage with mocha</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v040","title":"v0.4.0","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#added_6","title":"Added","text":"<ul> <li>Possibility to define the output method of google request</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#changed_6","title":"Changed","text":"<ul> <li>Separate layout template from entry template (thanks to ChaosSteffen)</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v030","title":"v0.3.0","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#added_7","title":"Added","text":"<ul> <li>Callback, which is triggered after rendering of all entries (thanks to cm0s)</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#changed_7","title":"Changed","text":"<ul> <li>Evaluate token map before passing it to custom token functions</li> <li>Moved minified version into <code>dist</code> folder (thanks to markrambow)</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v022","title":"v0.2.2","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#fixed_2","title":"Fixed","text":"<ul> <li>Array#indexOf IE bug</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v021","title":"v0.2.1","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#fixed_3","title":"Fixed","text":"<ul> <li>Catch failures while extracting images</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v020","title":"v0.2.0","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#added_8","title":"Added","text":"<ul> <li>The tokens <code>index</code> and <code>totalEntries</code></li> <li>Preparation for jasmine tests</li> </ul>"},{"location":"assets/plugins/jquery-rss/CHANGELOG/#v011","title":"v0.1.1","text":""},{"location":"assets/plugins/jquery-rss/CHANGELOG/#added_9","title":"Added","text":"<ul> <li>Entry filtering</li> </ul>"},{"location":"cheat-sheet-and-snippets/aws-cheat-sheet/","title":"aws cli cheat sheet","text":""},{"location":"cheat-sheet-and-snippets/aws-cheat-sheet/#aws-cli-cheat-sheet","title":"AWS Cli Cheat Sheet","text":""},{"location":"cheat-sheet-and-snippets/aws-cheat-sheet/#get-caller-identity-get-current-user-details","title":"Get caller identity / get current user details","text":"<pre><code>aws sts get-caller-identity\n</code></pre>"},{"location":"cheat-sheet-and-snippets/aws-cheat-sheet/#quick-create-a-bucket","title":"Quick create a bucket","text":"<pre><code>BUCKET_NAME=my-bucket-$(date +%s)\naws s3 mb $BUCKET_NAME\n</code></pre>"},{"location":"cheat-sheet-and-snippets/aws-cheat-sheet/#replace-a-file-in-s3-from-local-to-s3","title":"Replace a File in s3, from local to s3","text":"<pre><code>aws s3 cp C:\\Users\\sanand\\filename.ext s3://bucket-name/path/filename.ext\n</code></pre> or <pre><code>aws s3 cp C:\\Users\\sanand\\filename.ext s3://bucket-name/path/\n</code></pre>"},{"location":"cheat-sheet-and-snippets/aws-cheat-sheet/#sync-node-of-of-one-local-folder-to-node-of-another-folder-in-s3","title":"Sync node of of one local folder to node of another folder in s3","text":"<pre><code>aws s3 sync C:\\Users\\sanand\\path1 s3://bucket-name/folder1/folder2/folder3/ \n</code></pre>"},{"location":"cheat-sheet-and-snippets/aws-cheat-sheet/#sync-node-of-of-one-folder-in-s3-to-node-of-another-folder-in-s3","title":"Sync node of of one folder in s3 to node of another folder in s3","text":"<pre><code>aws s3 sync s3://bucket-name-1/folder1/folder2/folder3/ s3://bucket-name-2/folder1/folder2/folder3/ \n</code></pre>"},{"location":"cheat-sheet-and-snippets/aws-cheat-sheet/#empty-a-s3-bucket","title":"Empty a s3 bucket","text":"<pre><code>$BUCKET_NAME=\"bucket-name\"\n</code></pre> <pre><code>aws s3 rm s3://$BUCKET_NAME/ --recursive\n</code></pre>"},{"location":"cheat-sheet-and-snippets/aws-cheat-sheet/#remove-a-s3-bucket","title":"Remove a s3 bucket","text":"<pre><code>$BUCKET_NAME=\"bucket-name\"\n</code></pre> <pre><code>aws s3 rm s3://$BUCKET_NAME/ --recursive\naws s3 rb s3://$BUCKET_NAME\n</code></pre>"},{"location":"cheat-sheet-and-snippets/aws-cheat-sheet/#copy-a-folder-from-local-repo-to-s3-bucket-or-s3-folder","title":"Copy a folder from local repo to s3 bucket or s3 folder","text":"<pre><code> aws s3 cp $LOCAL_PATH\\ s3://$BUCKET_NAME/folder1/folder2/ --recursive\n</code></pre>"},{"location":"cheat-sheet-and-snippets/aws-cheat-sheet/#expand-disk-aws-ec2","title":"Expand disk aws ec2","text":"<pre><code>INSTANCE_ID=\nVOLUME_ID=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID | jq -r '.Reservations[0].Instances[0].BlockDeviceMappings[0].Ebs.VolumeId')\n\naws ec2 modify-volume --size 40 --volume-id $VOLUME_ID\n</code></pre>"},{"location":"cheat-sheet-and-snippets/aws-cheat-sheet/#get-internal-ip-of-ec2-with-a-specific-tag","title":"Get Internal Ip of ec2 with a specific tag","text":"<pre><code>aws ec2 describe-instances --filters Name=tag:created_by,Values=shivam   | jq -r '.Reservations[]?.Instances[]? | .PrivateIpAddress'\n</code></pre>"},{"location":"cheat-sheet-and-snippets/aws-cheat-sheet/#execute-lambda-remotely","title":"Execute Lambda Remotely","text":"<pre><code>aws lambda invoke \\\n    --cli-binary-format raw-in-base64-out \\\n    --function-name FUNCTION_NAME \\\n    --log-type Tail \\\n    --payload '{\"key\": \"value\"}' \\\n    response.json\n</code></pre>"},{"location":"cheat-sheet-and-snippets/aws-cheat-sheet/#iterate-through-all-files-in-an-s3-bucket-and-validate-all-cloudformation-templates","title":"Iterate through all files in an s3 bucket and validate all cloudformation templates","text":"<pre><code>yml_objects=$(aws s3api list-objects --bucket $BUCKET_NAME --prefix $ENVIRONMENT_NAME_ALIAS/templates --query \"Contents[].Key\" --output json --profile $PROFILE)\n\n\nfor file in $(echo $yml_objects | jq -r '.[]'); do\n  if [[ $file == *.yml ]]; then\n    TEMPLATE_URL=\"https://${BUCKET_NAME}.s3.amazonaws.com/${file}\"\n    echo \"URL: $TEMPLATE_URL\"\n    aws cloudformation validate-template --template-url \"${TEMPLATE_URL}\" --profile $PROFILE 1&gt;/dev/null\n  fi\ndone \n</code></pre>"},{"location":"cheat-sheet-and-snippets/cloudformation-cheat-sheet/","title":"cloudformation cheat sheet","text":"Resource Type Ref GetAtt Alexa::ASK::Skill Id AWS::AmazonMQ::Broker Id AmqpEndpoints, Arn, ConfigurationId, ConfigurationRevision, IpAddresses, MqttEndpoints, OpenWireEndpoints, StompEndpoints, WssEndpoints AWS::AmazonMQ::Configuration Id Arn, Id, Revision AWS::AmazonMQ::ConfigurationAssociation Id AWS::Amplify::App \u2013 AppId, AppName, Arn, DefaultDomain AWS::Amplify::Branch \u2013 Arn, BranchName AWS::Amplify::Domain \u2013 Arn, CertificateRecord, DomainName, DomainStatus, StatusReason AWS::ApiGateway::Account Id AWS::ApiGateway::ApiKey Id AWS::ApiGateway::Authorizer Id AWS::ApiGateway::BasePathMapping \u2013 AWS::ApiGateway::ClientCertificate Name AWS::ApiGateway::Deployment Id AWS::ApiGateway::DocumentationPart Id AWS::ApiGateway::DocumentationVersion \u2013 AWS::ApiGateway::DomainName DomainName DistributionDomainName, DistributionHostedZoneId, RegionalDomainName, RegionalHostedZoneId AWS::ApiGateway::GatewayResponse \u2013 AWS::ApiGateway::Method Id AWS::ApiGateway::Model Name AWS::ApiGateway::RequestValidator Id AWS::ApiGateway::Resource Id AWS::ApiGateway::RestApi Id RootResourceId AWS::ApiGateway::Stage Name AWS::ApiGateway::UsagePlan Id AWS::ApiGateway::UsagePlanKey \u2013 AWS::ApiGateway::VpcLink Id AWS::ApiGatewayV2::Api Id AWS::ApiGatewayV2::ApiMapping Id AWS::ApiGatewayV2::Authorizer Id AWS::ApiGatewayV2::Deployment Id AWS::ApiGatewayV2::DomainName DomainName RegionalDomainName, RegionalHostedZoneId AWS::ApiGatewayV2::Integration Id AWS::ApiGatewayV2::IntegrationResponse Id AWS::ApiGatewayV2::Model Id AWS::ApiGatewayV2::Route Id AWS::ApiGatewayV2::RouteResponse Id AWS::ApiGatewayV2::Stage Name AWS::ApplicationAutoScaling::ScalableTarget Id AWS::ApplicationAutoScaling::ScalingPolicy Arn AWS::AppMesh::Mesh Arn Arn, MeshName, Uid AWS::AppMesh::Route Arn Arn, MeshName, Uid, VirtualRouterName AWS::AppMesh::VirtualNode Arn Arn, MeshName, Uid, VirtualNodeName AWS::AppMesh::VirtualRouter Arn Arn, MeshName, Uid, VirtualRouterName AWS::AppMesh::VirtualService Arn Arn, MeshName, Uid, VirtualServiceName AWS::AppSync::ApiKey Arn ApiKey, Arn AWS::AppSync::DataSource Arn DataSourceArn, Name AWS::AppSync::FunctionConfiguration Arn DataSourceName, FunctionArn, FunctionId, Name AWS::AppSync::GraphQLApi Arn ApiId, Arn, GraphQLUrl AWS::AppSync::GraphQLSchema Id AWS::AppSync::Resolver Arn FieldName, ResolverArn, TypeName AWS::Athena::NamedQuery Name AWS::AutoScaling::AutoScalingGroup Name AWS::AutoScaling::LaunchConfiguration Name AWS::AutoScaling::LifecycleHook Name AWS::AutoScaling::ScalingPolicy Arn AWS::AutoScaling::ScheduledAction Name AWS::AutoScalingPlans::ScalingPlan Arn AWS::Backup::BackupPlan Id BackupPlanArn, BackupPlanId, VersionId AWS::Backup::BackupSelection Id BackupPlanId, SelectionId AWS::Backup::BackupVault Name BackupVaultArn, BackupVaultName AWS::Batch::ComputeEnvironment Arn AWS::Batch::JobDefinition Arn AWS::Batch::JobQueue Arn AWS::Budgets::Budget Name AWS::CertificateManager::Certificate Arn AWS::CloudFormation::CustomResource \u2013 AWS::CloudFormation::Macro Name AWS::CloudFormation::Stack Id AWS::CloudFormation::WaitCondition Name Data AWS::CloudFormation::WaitConditionHandle \u2013 AWS::CloudFront::CloudFrontOriginAccessIdentity OriginAccessIdentity S3CanonicalUserId AWS::CloudFront::Distribution Id DomainName AWS::CloudFront::StreamingDistribution Id DomainName AWS::CloudTrail::Trail Name Arn, SnsTopicArn AWS::CloudWatch::Alarm Name Arn AWS::CloudWatch::AnomalyDetector \u2013 AWS::CloudWatch::Dashboard Name AWS::CodeBuild::Project Name Arn AWS::CodeCommit::Repository Id Arn, CloneUrlHttp, CloneUrlSsh, Name AWS::CodeDeploy::Application Name AWS::CodeDeploy::DeploymentConfig Name AWS::CodeDeploy::DeploymentGroup Name AWS::CodePipeline::CustomActionType Name AWS::CodePipeline::Pipeline Name Version AWS::CodePipeline::Webhook Name Url AWS::Cognito::IdentityPool Id Name AWS::Cognito::IdentityPoolRoleAttachment Id AWS::Cognito::UserPool Id Arn, ProviderName, ProviderURL AWS::Cognito::UserPoolClient Id AWS::Cognito::UserPoolGroup Name AWS::Cognito::UserPoolUser Name AWS::Cognito::UserPoolUserToGroupAttachment Id AWS::Config::AggregationAuthorization Arn AWS::Config::ConfigRule Name Arn, Compliance.Type, ConfigRuleId AWS::Config::ConfigurationAggregator Name AWS::Config::ConfigurationRecorder Name AWS::Config::DeliveryChannel Name AWS::Config::RemediationConfiguration RemediationAction AWS::DataPipeline::Pipeline Id AWS::DAX::Cluster Name Arn, ClusterDiscoveryEndpoint AWS::DAX::ParameterGroup Name AWS::DAX::SubnetGroup Name AWS::DLM::LifecyclePolicy Id Arn AWS::DMS::Certificate Arn AWS::DMS::Endpoint Arn ExternalId AWS::DMS::EventSubscription Name AWS::DMS::ReplicationInstance Arn ReplicationInstancePrivateIpAddresses, ReplicationInstancePublicIpAddresses AWS::DMS::ReplicationSubnetGroup Name AWS::DMS::ReplicationTask Arn AWS::DocDB::DBCluster DBClusterIdentifier ClusterResourceId, Endpoint, Port, ReadEndpoint AWS::DocDB::DBClusterParameterGroup Name AWS::DocDB::DBInstance Name Endpoint, Port AWS::DocDB::DBSubnetGroup Name AWS::DynamoDB::Table Name Arn, StreamArn AWS::EC2::CapacityReservation Id AvailabilityZone, AvailableInstanceCount, InstanceType, Tenancy, TotalInstanceCount AWS::EC2::ClientVpnAuthorizationRule \u2013 AWS::EC2::ClientVpnEndpoint Id AWS::EC2::ClientVpnRoute \u2013 AWS::EC2::ClientVpnTargetNetworkAssociation Id AWS::EC2::CustomerGateway Id AWS::EC2::DHCPOptions Name AWS::EC2::EC2Fleet Id AWS::EC2::EgressOnlyInternetGateway Id AWS::EC2::EIP ElasticIpAddress AllocationId AWS::EC2::EIPAssociation Name AWS::EC2::FlowLog Id AWS::EC2::Host Id AWS::EC2::Instance Id AvailabilityZone, PrivateDnsName, PrivateIp, PublicDnsName, PublicIp AWS::EC2::InternetGateway Name AWS::EC2::LaunchTemplate Id DefaultVersionNumber, LatestVersionNumber AWS::EC2::NatGateway Name AWS::EC2::NetworkAcl Name AWS::EC2::NetworkAclEntry Name AWS::EC2::NetworkInterface Name PrimaryPrivateIpAddress, SecondaryPrivateIpAddresses AWS::EC2::NetworkInterfaceAttachment Name AWS::EC2::NetworkInterfacePermission Name AWS::EC2::PlacementGroup Name AWS::EC2::Route Id AWS::EC2::RouteTable Id AWS::EC2::SecurityGroup Name GroupId, VpcId AWS::EC2::SecurityGroupEgress RuleName AWS::EC2::SecurityGroupIngress \u2013 AWS::EC2::SpotFleet Id AWS::EC2::Subnet Id AvailabilityZone, Ipv6CidrBlocks, NetworkAclAssociationId, VpcId AWS::EC2::SubnetCidrBlock CidrBlock AWS::EC2::SubnetNetworkAclAssociation Id AssociationId AWS::EC2::SubnetRouteTableAssociation Id AWS::EC2::TransitGateway Id AWS::EC2::TransitGatewayAttachment Name AWS::EC2::TransitGatewayRoute Name AWS::EC2::TransitGatewayRouteTable Name AWS::EC2::TransitGatewayRouteTableAssociation Id AWS::EC2::TransitGatewayRouteTablePropagation RouteTableId AWS::EC2::Volume Name AWS::EC2::VolumeAttachment \u2013 AWS::EC2::VPC Id CidrBlock, CidrBlockAssociations, DefaultNetworkAcl, DefaultSecurityGroup, Ipv6CidrBlocks AWS::EC2::VPCCidrBlock CidrBlock AWS::EC2::VPCDHCPOptionsAssociation Id AWS::EC2::VPCEndpoint Id CreationTimestamp, DnsEntries, NetworkInterfaceIds AWS::EC2::VPCEndpointConnectionNotification Id AWS::EC2::VPCEndpointService Id AWS::EC2::VPCEndpointServicePermissions Id AWS::EC2::VPCGatewayAttachment Id AWS::EC2::VPCPeeringConnection Id AWS::EC2::VPNConnection Id AWS::EC2::VPNConnectionRoute Id AWS::EC2::VPNGateway Id AWS::EC2::VPNGatewayRoutePropagation VpnGatewayId AWS::ECR::Repository Name Arn AWS::ECS::Cluster Name Arn AWS::ECS::Service Arn Name AWS::ECS::TaskDefinition Arn AWS::EFS::FileSystem Id AWS::EFS::MountTarget Id IpAddress AWS::EKS::Cluster Name Arn, CertificateAuthorityData, Endpoint AWS::ElastiCache::CacheCluster Name ConfigurationEndpoint.Address, ConfigurationEndpoint.Port, RedisEndpoint.Address, RedisEndpoint.Port AWS::ElastiCache::ParameterGroup Name AWS::ElastiCache::ReplicationGroup Name ConfigurationEndPoint.Address, ConfigurationEndPoint.Port, PrimaryEndPoint.Address, PrimaryEndPoint.Port, ReadEndPoint.Addresses, ReadEndPoint.Addresses.List, ReadEndPoint.Ports, ReadEndPoint.Ports.List AWS::ElastiCache::SecurityGroup Name AWS::ElastiCache::SecurityGroupIngress Name AWS::ElastiCache::SubnetGroup Name AWS::ElasticBeanstalk::Application Name AWS::ElasticBeanstalk::ApplicationVersion Name AWS::ElasticBeanstalk::ConfigurationTemplate Name AWS::ElasticBeanstalk::Environment Name EndpointURL AWS::ElasticLoadBalancing::LoadBalancer Name CanonicalHostedZoneName, CanonicalHostedZoneNameID, DNSName, SourceSecurityGroup.GroupName, SourceSecurityGroup.OwnerAlias AWS::ElasticLoadBalancingV2::Listener Arn AWS::ElasticLoadBalancingV2::ListenerCertificate \u2013 AWS::ElasticLoadBalancingV2::ListenerRule Arn AWS::ElasticLoadBalancingV2::LoadBalancer Arn CanonicalHostedZoneID, DNSName, LoadBalancerFullName, LoadBalancerName, SecurityGroups AWS::ElasticLoadBalancingV2::TargetGroup Arn LoadBalancerArns, TargetGroupFullName, TargetGroupName AWS::Elasticsearch::Domain Name Arn, DomainArn, DomainEndpoint AWS::EMR::Cluster Id MasterPublicDNS AWS::EMR::InstanceFleetConfig InstanceFleetId AWS::EMR::InstanceGroupConfig InstanceGroupId AWS::EMR::SecurityConfiguration Name AWS::EMR::Step Id AWS::Events::EventBus Name Arn, Name, Policy AWS::Events::EventBusPolicy Id AWS::Events::Rule Id Arn AWS::Glue::Classifier Name AWS::Glue::Connection Name AWS::Glue::Crawler Name AWS::Glue::Database Name AWS::Glue::DataCatalogEncryptionSettings \u2013 AWS::Glue::DevEndpoint Name AWS::Glue::Job Name AWS::Glue::Partition Name AWS::Glue::SecurityConfiguration \u2013 AWS::Glue::Table Name AWS::Glue::Trigger Name AWS::GuardDuty::Detector Id AWS::GuardDuty::Filter Name AWS::GuardDuty::IPSet Id AWS::GuardDuty::Master AccountId AWS::GuardDuty::Member AccountId AWS::GuardDuty::ThreatIntelSet Id AWS::IAM::AccessKey AccessKeyId SecretAccessKey AWS::IAM::Group Name Arn AWS::IAM::InstanceProfile Name Arn AWS::IAM::ManagedPolicy Arn AWS::IAM::Policy Name AWS::IAM::Role Name Arn, RoleId AWS::IAM::ServiceLinkedRole \u2013 AWS::IAM::User UserName Arn AWS::IAM::UserToGroupAddition Name AWS::Inspector::AssessmentTarget \u2013 Arn AWS::Inspector::AssessmentTemplate \u2013 Arn AWS::Inspector::ResourceGroup \u2013 Arn AWS::IoT::Certificate Id Arn AWS::IoT::Policy Name Arn AWS::IoT::PolicyPrincipalAttachment \u2013 AWS::IoT::Thing Name AWS::IoT::ThingPrincipalAttachment \u2013 AWS::IoT::TopicRule Name Arn AWS::IoT1Click::Device Arn Arn, DeviceId, Enabled AWS::IoT1Click::Placement Id PlacementName, ProjectName AWS::IoT1Click::Project Arn Arn, ProjectName AWS::IoTAnalytics::Channel \u2013 AWS::IoTAnalytics::Dataset \u2013 AWS::IoTAnalytics::Datastore \u2013 AWS::IoTAnalytics::Pipeline \u2013 AWS::IoTEvents::DetectorModel Name AWS::IoTEvents::Input Name AWS::IoTThingsGraph::FlowTemplate Urn AWS::Kinesis::Stream Name Arn AWS::Kinesis::StreamConsumer ConsumerArn ConsumerARN, ConsumerCreationTimestamp, ConsumerName, ConsumerStatus, StreamARN AWS::KinesisAnalytics::Application \u2013 AWS::KinesisAnalytics::ApplicationOutput \u2013 AWS::KinesisAnalytics::ApplicationReferenceDataSource \u2013 AWS::KinesisAnalyticsV2::Application \u2013 AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption \u2013 AWS::KinesisAnalyticsV2::ApplicationOutput \u2013 AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource \u2013 AWS::KinesisFirehose::DeliveryStream Name Arn AWS::KMS::Alias Name AWS::KMS::Key Id Arn AWS::Lambda::Alias Arn AWS::Lambda::EventSourceMapping Name AWS::Lambda::Function Name Arn AWS::Lambda::LayerVersion Arn AWS::Lambda::LayerVersionPermission Arn AWS::Lambda::Permission \u2013 AWS::Lambda::Version Arn Version AWS::Logs::Destination Name Arn AWS::Logs::LogGroup Name Arn AWS::Logs::LogStream Name AWS::Logs::MetricFilter \u2013 AWS::Logs::SubscriptionFilter Name AWS::RDS::DBCluster Name Endpoint.Address, Endpoint.Port, ReadEndpoint.Address AWS::RDS::DBClusterParameterGroup Name AWS::RDS::DBInstance Name Endpoint.Address, Endpoint.Port AWS::RDS::DBParameterGroup Name AWS::RDS::DBSecurityGroup Name AWS::RDS::DBSecurityGroupIngress DBSecurityGroup AWS::RDS::DBSubnetGroup Name AWS::RDS::EventSubscription Name AWS::RDS::OptionGroup Name AWS::Route53::HealthCheck HealthCheckId AWS::Route53::HostedZone HosteadZoneId NameServers AWS::Route53::RecordSet DomainName AWS::Route53::RecordSetGroup Name AWS::Route53Resolver::ResolverEndpoint ResolverEndpoint Arn, Direction, HostVPCId, IpAddressCount, Name, ResolverEndpointId AWS::Route53Resolver::ResolverRule ResolverRule Arn, DomainName, ResolverEndpointId, ResolverRuleId, TargetIps AWS::Route53Resolver::ResolverRuleAssociation ResolverRuleAssociationId Name, ResolverRuleAssociationId, ResolverRuleId, VPCId AWS::S3::Bucket Name Arn, DomainName, DualStackDomainName, RegionalDomainName, WebsiteURL AWS::SageMaker::CodeRepository Arn CodeRepositoryName AWS::SageMaker::Endpoint Arn EndpointName AWS::SageMaker::EndpointConfig Arn EndpointConfigName AWS::SageMaker::Model Arn ModelName AWS::SageMaker::NotebookInstance Arn NotebookInstanceName AWS::SageMaker::NotebookInstanceLifecycleConfig Arn NotebookInstanceLifecycleConfigName AWS::SecretsManager::ResourcePolicy Arn AWS::SecretsManager::RotationSchedule Arn AWS::SecretsManager::Secret Arn AWS::SecretsManager::SecretTargetAttachment Arn AWS::ServiceDiscovery::HttpNamespace Id Arn, Id AWS::ServiceDiscovery::Instance Id AWS::ServiceDiscovery::PrivateDnsNamespace Id Arn, Id AWS::ServiceDiscovery::PublicDnsNamespace Id Arn, Id AWS::ServiceDiscovery::Service Id Arn, Id, Name AWS::SES::ConfigurationSet Name AWS::SES::ConfigurationSetEventDestination AWS::SES::ReceiptFilter AWS::SES::ReceiptRule Name AWS::SES::ReceiptRuleSet Name AWS::SES::Template AWS::SNS::Topic Arn TopicName AWS::SQS::Queue QueueURL Arn, QueueName AWS::SSM::Association AWS::SSM::Document Name AWS::SSM::MaintenanceWindow Id AWS::SSM::MaintenanceWindowTarget Id AWS::SSM::MaintenanceWindowTask Id AWS::SSM::Parameter Name Type, Value AWS::SSM::PatchBaseline Id AWS::SSM::ResourceDataSync Name AWS::StepFunctions::Activity Arn Name AWS::StepFunctions::StateMachine Arn Name AWS::Transfer::Server Id Arn, ServerId AWS::Transfer::User UserName Arn, ServerId, UserName AWS::WAF::ByteMatchSet Id AWS::WAF::IPSet Id AWS::WAF::Rule Id AWS::WAF::SizeConstraintSet Id AWS::WAF::SqlInjectionMatchSet Id AWS::WAF::WebACL Name AWS::WAF::XssMatchSet Id AWS::WAFRegional::ByteMatchSet Id AWS::WAFRegional::GeoMatchSet Id AWS::WAFRegional::IPSet Id AWS::WAFRegional::RateBasedRule Id AWS::WAFRegional::RegexPatternSet Id AWS::WAFRegional::Rule Id AWS::WAFRegional::SizeConstraintSet Id AWS::WAFRegional::SqlInjectionMatchSet Id AWS::WAFRegional::WebACL Name AWS::WAFRegional::WebACLAssociation"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/","title":"docker cheat sheet","text":""},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#docker-cheat-sheet","title":"Docker Cheat Sheet","text":""},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#login-to-customprivate-repository","title":"Login to custom/private repository","text":"<pre><code>REPOSITORY_URL=&lt;repo url like artifactory.shivamanand.com&gt;\nREPOSITORY_USERNAME=&lt;username&gt;\nREPOSITORY_PASSWORD=&lt;password or token&gt;\n\ndocker login $REPOSITORY_URL --username $REPOSITORY_USERNAME --password $REPOSITORY_PASSWORD\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#login-to-dockerhub","title":"Login to dockerhub","text":"<pre><code>REPOSITORY_USERNAME=&lt;username&gt;\nREPOSITORY_PASSWORD=&lt;password or token&gt;\n\ndocker login --username $REPOSITORY_USERNAME --password $REPOSITORY_PASSWORD\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#docker-pull-image","title":"Docker pull image","text":"<p>public image from docker hub </p><pre><code>docker pull anandshivam44/flask-hello-world:v1\n</code></pre> private image <pre><code># For private repo docker login before\ndocker pull artifactory.shivamanand.com/docker-release/image/path/python312:v1\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#list-docker-images-and-running-containers","title":"List docker images and running containers","text":"<pre><code># Get all Images\ndocker images\n# Get all containers\ndocker ps -a\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#docker-run-images-multiple-ways-to-run-a-docker-container","title":"Docker run images - multiple ways to run a docker container","text":"<pre><code># Run a container - simple\ndocker run -it ubuntu:latest\n# Run a container and SSH into it.\ndocker run -it ubuntu:latest /bin/bash\n\n# Docker port binding\nHOST_PORT=80\nCONTAINER_PORT=5000\ndocker run -p $HOST_PORT:$CONTAINER_PORT flask-hello-world:v1\n\n# Docker multiple port binding\ndocker run  -p 80:5000 -p 8080:8080 -p 443:443 crud-flask:v1\n\n# Multiple Vars\ndocker run \\\n--detach \\\n--name=[container_name] \\\n--env=\"MYSQL_ROOT_PASSWORD=[my_password]\" \\\n--publish 6603:3306 \\\n--volume=/root/docker/[container_name]/conf.d:/etc/mysql/conf.d \\\nmysql\n\n# Use host network, helps with port mappings\ndocker run --network=\"host\"  -it stream-purchase-processor\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#docker-build","title":"Docker Build","text":"<pre><code># Clones a public github repo and builds Dockerfile from the root of \ndocker build github.com/anandshivam44/flask-hello-world\n\n# Docker Build with an image name\ndocker build -t myimage:latest .\n\n# Docker Build from a file\ndocker build -f Dockerfile.dev -t myimage:dev .\n# Docker Build and pass arguments/parameters\ndocker build --build-arg APP_VERSION=1.0 -t myimage:latest .\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#docker-push-to-repository","title":"Docker push to repository","text":"<pre><code># tag image (optional)\ndocker image tag my-app:latest johndoe/my-app:latest\n\n#Push image (login madatory)\ndocker push johndoe/my-app:latest\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#docker-login-commit-and-push-a-running-image","title":"Docker login, commit and push a running image","text":"<pre><code>docker login\nsudo docker commit CONTAINER_HASH anandshivam44/flask-hello-world:v1\ndocker push anandshivam44/flask-hello-world:v1\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#run-docker-without-sudo","title":"Run docker without sudo","text":"<pre><code>sudo groupadd docker\nsudo gpasswd -a $USER docker\nnewgrp docker\n</code></pre> or <pre><code>sudo groupadd docker # create group\nsudo usermod -aG docker ${USER} # add currrent user\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#docker-daemon","title":"Docker Daemon","text":"<pre><code># start Docker\nsudo service docker start\n# Check Docker status\nsudo service docker status\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#docker-init-quickly-create-dockerfile","title":"Docker Init - Quickly create Dockerfile","text":"<pre><code>docker init\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#delete-all-images-and-running-containers","title":"Delete all images and running containers","text":"<pre><code># Remove all Docker containers locally\ndocker rm -vf $(docker ps -a -q)\n# Remove all Docker Images locally\ndocker rmi -f $(docker images -a -q)\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#ssh","title":"SSH","text":"<pre><code>docker exec -it [container_name] bash\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#docker-compose","title":"Docker Compose","text":"<pre><code>docker-compose build\ndocker-compose up -d\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#get-internal-ip-of-the-docker-container","title":"Get Internal IP of the Docker Container","text":"<pre><code>INTERNAL_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' docker_ssh)\necho $INTERNAL_IP\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#docker-container-logs","title":"Docker Container Logs","text":"<pre><code>docker logs container_name\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#to-check-the-location-of-the-volumes","title":"To check the location of the volumes","text":"<pre><code>docker inspect [container_name]\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#install-docker-ubuntu","title":"Install Docker Ubuntu","text":""},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#update-your-system","title":"Update your system:","text":"<pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y\n\nsudo apt install -y \\\n  ca-certificates \\\n  curl \\\n  gnupg \\\n  lsb-release\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#add-dockers-official-gpg-key","title":"Add Docker\u2019s official GPG key:","text":"<pre><code>sudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | \\\n  sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#set-up-the-docker-repository","title":"Set up the Docker repository:","text":"<pre><code>echo \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \\\n  https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#install-docker-engine","title":"Install Docker Engine:","text":"<pre><code>sudo apt update\nsudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#start-and-enable-docker","title":"Start and enable Docker:","text":"<pre><code>sudo systemctl enable docker\nsudo systemctl start docker\n</code></pre>"},{"location":"cheat-sheet-and-snippets/docker-cheat-sheet/#optional-run-docker-as-a-non-root-user","title":"(Optional) Run Docker as a non-root user:","text":"<pre><code>sudo usermod -aG docker $USER\nnewgrp docker\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/","title":"elastic search cheat sheet","text":""},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#elastic-search-cheat-sheet-with-kibana-rest-curl-commands","title":"Elastic Search Cheat Sheet with Kibana REST &amp; curl commands","text":"<p>First Set ELASTICSEARCH URL </p><pre><code>ELASTICSEARCH_URL=\"&lt;cluster url with protocol and optinally port number&gt;\"\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#elastic-search-administration","title":"Elastic Search Administration","text":""},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-the-health-of-the-cluster","title":"Get the health of the cluster","text":"<pre><code>GET /_cluster/health\n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cluster/health?pretty\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-cluster-stats","title":"Get cluster stats","text":"<pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cluster/stats?pretty&amp;human=true\" \n</code></pre> <pre><code>GET /_cluster/stats?human=true\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-the-cluster-state","title":"Get the cluster state","text":"<pre><code>GET /_cluster/state\n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cluster/state?pretty\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#cluster-information","title":"Cluster Information","text":"<pre><code>GET /\n</code></pre> <pre><code>curl -s -XGET $ELASTICSEARCH_URL\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-size-of-all-indices","title":"Get Size of all indices","text":"<pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cluster/stats?pretty&amp;human=true\" | jq -r '.indices.store.size'\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-size-of-elastic-search-data-on-each-node-vs-node-size","title":"Get Size of Elastic Search data on each node vs node size","text":"<pre><code>GET /_cat/allocation?v \n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cat/allocation?v\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-node-information","title":"Get Node information","text":"<pre><code>GET /_cat/nodes?v \n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cat/nodes?v\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-thread-pool","title":"Get Thread Pool","text":"<pre><code>GET /_cat/thread_pool?v&amp;s=active:desc\n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cat/thread_pool?v&amp;s=active:desc\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-total-number-of-shards","title":"Get total number of shards","text":"<pre><code>GET _cluster/stats?filter_path=indices.shards.total\n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cluster/stats?filter_path=indices.shards.total&amp;pretty\"\n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cat/shards\" | wc -l\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-total-number-of-indices","title":"Get total number of indices","text":"<pre><code>curl \"$ELASTICSEARCH_URL/_cat/indices?h=index\" | wc -l\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-list-of-pending-tasks","title":"Get List of Pending Tasks","text":"<pre><code>GET /_cluster/pending_tasks\n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cluster/pending_tasks?pretty\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-list-of-all-mappings","title":"Get List of All mappings","text":"<pre><code>GET /_mapping\n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_mapping?pretty\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-all-plugins","title":"Get all plugins","text":"<pre><code>GET /_cat/plugins?v&amp;s=component \n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cat/plugins?v&amp;s=component\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#total-free-space-in-the-cluster","title":"Total Free Space in the CLuster","text":"<pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cluster/stats?pretty&amp;human=true\" | jq -r '.nodes.fs.free'\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#format-elastic-search-output-examples","title":"Format Elastic Search Output; Examples","text":"<pre><code>GET /_cluster/health?format=yaml\n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cluster/health?format=yaml\"\n</code></pre> <pre><code>GET /_cluster/health?format=csv\n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cluster/health?format=csv\"\n</code></pre> <pre><code>GET /_cluster/health?format=txt\n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cluster/health?format=txt\"\n</code></pre> <pre><code>GET /_cluster/health?format=json\n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cluster/health?format=json&amp;pretty\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#elastic-search-database-operations","title":"Elastic Search DataBase Operations","text":"<p>Set Index Name </p><pre><code>INDEX_NAME=\"&lt;index name&gt;\"\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#create-an-index-default","title":"Create an index (default)","text":"<pre><code>PUT /&lt;index-name&gt; \n</code></pre> <pre><code>curl -X PUT \"$ELASTICSEARCH_URL/$INDEX_NAME\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#create-an-index-with-mappings-and-settings","title":"Create an index with mappings and settings","text":"<pre><code>PUT /index-name\n{\n  \"settings\": {\n    \"number_of_shards\": 1,\n    \"number_of_replicas\": 1\n  },\n  \"mappings\": {\n    \"properties\": {\n      \"name\": {\n        \"type\": \"text\"\n      },\n      \"price\": {\n        \"type\": \"integer\"\n      }\n    }\n  }\n}\n</code></pre> <pre><code>curl -X PUT \"$ELASTICSEARCH_URL/$INDEX_NAME\" -H \"Content-Type: application/json\" -d '{\n  \"settings\": {\n    \"number_of_shards\": 1,\n    \"number_of_replicas\": 1\n  },\n  \"mappings\": {\n    \"properties\": {\n      \"name\": {\n        \"type\": \"text\"\n      },\n      \"price\": {\n        \"type\": \"integer\"\n      }\n    }\n  }\n}'\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#add-a-document","title":"Add a document","text":"<pre><code>POST /&lt;index-name&gt;/_doc\n{\n  \"name\": \"Shivam\",\n  \"age\": 24\n}\n</code></pre> <pre><code>curl -X POST \"$ELASTICSEARCH_URL/$INDEX_NAME/_doc\" -H \"Content-Type: application/json\" -d '{\n  \"name\": \"Shivam\",\n  \"age\": 24\n}'\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-index-mappings-and-settings","title":"Get index mappings and settings","text":"<pre><code>GET /&lt;index-name&gt; \n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/$INDEX_NAME?pretty\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#empty-an-index","title":"Empty an index","text":"<pre><code>POST /&lt;index-name&gt;/_delete_by_query?q=* \n</code></pre> <pre><code>curl -XPOST \"$ELASTICSEARCH_URL/$INDEX_NAME/_delete_by_query?q=*\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#delete-an-index","title":"Delete an index","text":"<pre><code>DELETE /&lt;index-name&gt; \n</code></pre> <pre><code>curl -X DELETE \"$ELASTICSEARCH_URL/$INDEX_NAME\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#list-all-indices-most-useful-sort-by-descending-order-of-size-show-header-and-important-columns-only","title":"List All Indices (Most useful), Sort by descending order of size, show header and important columns only","text":"<pre><code>GET /_cat/indices?v&amp;s=store.size:desc&amp;h=index,pri,rep,docs.count,docs.deleted,store.size,pri.store.size \n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cat/indices?v&amp;s=store.size:desc&amp;h=index,pri,rep,docs.count,docs.deleted,store.size,pri.store.size\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#list-all-indices-with-metadata","title":"List All Indices with metadata","text":"<pre><code>GET /_cat/indices?v\n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cat/indices?v\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-all-indices-list-only","title":"Get All Indices list only","text":"<pre><code>GET /_cat/indices?h=index\n</code></pre> <pre><code>curl -s -XGET $ELASTICSEARCH_URL/_cat/indices?h=index\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-all-indices-sorted-in-descending-order-of-size","title":"Get All Indices sorted in descending order of size","text":"<pre><code>GET /_cat/indices?v&amp;s=store.size:desc\n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cat/indices?v&amp;s=store.size:desc\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-list-of-all-aliases-sort-by-index-name","title":"Get List of All aliases , Sort by index name","text":"<pre><code>GET /_cat/aliases?v&amp;s=index \n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cat/aliases?v&amp;s=index\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-list-of-all-aliases","title":"Get List of All aliases","text":"<pre><code>GET /_cat/aliases?v \n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/_cat/aliases?v\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-all-data-inside-the-index","title":"Get all data inside the index","text":"<pre><code>GET /&lt;index-name&gt;/_search?pretty\n{\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/$INDEX_NAME/_search?pretty\" -H 'Content-Type: application/json' -d'\n{\n    \"query\": {\n        \"match_all\": {}\n    }\n}'\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#update-an-entire-doc-by-it-id","title":"Update an entire doc by it ID","text":"<pre><code>PUT /&lt;index-name&gt;/_doc/&lt;doc-id&gt;\n{\n  \"name\": \"Anand\",\n  \"age\": 25\n}\n</code></pre> <pre><code>curl -X PUT \"$ELASTICSEARCH_URL/$INDEX_NAME/_doc/$DOC_ID\" -H \"Content-Type: application/json\" -d '{\n  \"name\": \"Anand\",\n  \"age\": 25\n}'\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#update-a-specific-field-document-in-an-index-by-its-id","title":"Update a specific field document in an index by its id","text":"<pre><code>POST /&lt;index-name&gt;/_update/&lt;doc-id&gt;\n{\n  \"doc\": {\n    \"age\": 99\n  }\n}\n</code></pre> <pre><code>DOC_ID=\"&lt;Get document id&gt;\"\ncurl -X POST \"$ELASTICSEARCH_URL/$INDEX_NAME/_update/$DOC_ID\" -H \"Content-Type: application/json\" -d '{\n  \"doc\": {\n    \"age\": 99\n  }\n}'\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#update-all-document-in-an-index-by-script","title":"Update all document in an index by script","text":"<pre><code>POST /&lt;index-name&gt;/_update_by_query\n{\n  \"script\": {\n    \"source\": \"ctx._source.age += params.count\",\n    \"lang\": \"painless\",\n    \"params\": {\n      \"count\": 10\n    }\n  }\n}\n</code></pre> <pre><code>curl -X POST \"$ELASTICSEARCH_URL/$INDEX_NAME/_update_by_query\" -H 'Content-Type: application/json' -d'\n{\n  \"script\" : {\n    \"source\": \"ctx._source.age += params.count\",\n    \"lang\": \"painless\",\n    \"params\" : {\n      \"count\" : 10\n    }\n  }\n}'\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#bulk-operation-using-bulk-api","title":"Bulk Operation using bulk API","text":"<pre><code>POST /&lt;index-name&gt;/_update_by_query\n{\n  \"script\": {\n    \"source\": \"ctx._source.age += params.count\",\n    \"lang\": \"painless\",\n    \"params\": {\n      \"count\": 10\n    }\n  }\n}\n</code></pre> <pre><code>curl -XPOST \"$ELASTICSEARCH_URL/$INDEX_NAME/_bulk?pretty\" -H \"Content-Type: application/json\" -d '\n{\"index\":{\"_id\":\"1\"}\n{\"name\": \"Ramu\",\"age\": 45}\n{\"index\":{\"_id\":\"2\"}\n{\"name\": \"Lemon\",\"age\": 1}\n{\"delete\":{\"_id\":\"1\"}}\n{\"update\":{\"_id\":\"2\"}}\n{\"doc\":{\"name\":\"Orange\"}}\n'\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-document-count-in-an-index","title":"Get document count in an index","text":"<pre><code>GET /&lt;index-name&gt;/_count \n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/$INDEX_NAME/_count?pretty\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#make-an-index-read-only","title":"Make an index read-only","text":"<p>Block write to the source index / make the index read only </p><pre><code>PUT /&lt;index-name&gt;/_settings?pretty\n{\n  \"index.blocks.write\": true\n}\n</code></pre> <pre><code>curl -X PUT \"$ELASTICSEARCH_URL/$INDEX_NAME/_settings?pretty\" -H 'Content-Type: application/json' -d '\n{\n   \"index.blocks.write\": true\n}'\n</code></pre> Verify write is blocked <pre><code>GET /&lt;index-name&gt;/_settings \n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/$INDEX_NAME/_settings?pretty\"\n</code></pre><p></p> <p>Undo block write / Undo read-only mode </p><pre><code>PUT /&lt;source-index&gt;/_settings\n{\n  \"index.blocks.write\": false\n}\n</code></pre> <pre><code>curl -X PUT \"$ELASTICSEARCH_URL/$SOURCE_INDEX/_settings\" -H 'Content-Type: application/json' -d '\n{\n   \"index.blocks.write\": false\n}'\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#backup-an-index","title":"Backup an index","text":"<pre><code>SOURCE_INDEX=\"&lt;copy from index&gt;\"  \n</code></pre> <pre><code>DESTINATION_INDEX=\"&lt;copy to index&gt;\"\n</code></pre> <p>Mandatory step to block write to the source index / make the index read only </p><pre><code>PUT /&lt;source-index&gt;/_settings?pretty\n{\n  \"index.blocks.write\": true\n}\n</code></pre> <pre><code>curl -X PUT \"$ELASTICSEARCH_URL/$SOURCE_INDEX/_settings?pretty\" -H 'Content-Type: application/json' -d '\n{\n   \"index.blocks.write\": true\n}'\n</code></pre> Verify write is blocked <pre><code>GET /&lt;source-index&gt;/_settings \n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/$SOURCE_INDEX/_settings?pretty\"\n</code></pre> Copy data from source to destination <pre><code>POST /&lt;source-index&gt;/_clone/&lt;destination-index&gt;?pretty\n</code></pre> <pre><code>curl -XPOST \"$ELASTICSEARCH_URL/$SOURCE_INDEX/_clone/$DESTINATION_INDEX?pretty\" \n</code></pre> Verify data is copied to destination <pre><code>POST /&lt;index-name&gt;/_search?pretty\n{\n  \"query\": {\n    \"match_all\": {}\n  }\n}\n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/$DESTINATION_INDEX/_search?pretty\" -H 'Content-Type: application/json' -d'\n{\n    \"query\": {\n        \"match_all\": {}\n    }\n}'\n</code></pre> Undo block write / Undo read-only mode <pre><code>PUT /&lt;source-index&gt;/_settings\n{\n  \"index.blocks.write\": false\n}\n</code></pre> <pre><code>curl -X PUT \"$ELASTICSEARCH_URL/$SOURCE_INDEX/_settings\" -H 'Content-Type: application/json' -d '\n{\n   \"index.blocks.write\": false\n}'\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#open-and-close-indexes-to-save-memory-and-cpu","title":"Open and close indexes to save memory and CPU","text":"<p>close: A closed index is essentially frozen. Search and write operations are blocked.</p> <p></p><pre><code>POST /&lt;index-name&gt;/_close \n</code></pre> <pre><code>curl -XPOST \"$ELASTICSEARCH_URL/$INDEX_NAME/_close\"\n</code></pre> open: An open index is available for search and write operations. This is the typical state for an index you're actively using for data storage and retrieval.<p></p> <p></p><pre><code>POST /&lt;index-name&gt;/_open \n</code></pre> <pre><code>curl -XPOST \"$ELASTICSEARCH_URL/$INDEX_NAME/_open\"\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-index-stats","title":"Get Index Stats","text":"<pre><code>GET /&lt;index-name&gt;/_stats \n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/$INDEX_NAME/_stats?pretty\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-index-segments-information","title":"Get Index Segments Information","text":"<pre><code>GET /&lt;index-name&gt;/_segments \n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/$INDEX_NAME/_segments?pretty\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#get-index-recovery-status-human-readable","title":"Get Index Recovery Status (Human Readable)","text":"<pre><code>GET /&lt;index-name&gt;/_recovery&amp;human \n</code></pre> <pre><code>curl -s -XGET \"$ELASTICSEARCH_URL/$INDEX_NAME/_recovery?pretty&amp;human\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#clear-index-cache","title":"Clear Index Cache","text":"<pre><code>POST /&lt;index-name&gt;/_cache/clear \n</code></pre> <pre><code>curl -XPOST \"$ELASTICSEARCH_URL/$INDEX_NAME/_cache/clear\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#refresh-index","title":"Refresh Index","text":"<pre><code>POST /&lt;index-name&gt;/_refresh \n</code></pre> <pre><code>curl -XPOST \"$ELASTICSEARCH_URL/$INDEX_NAME/_refresh\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#flush-index","title":"Flush Index","text":"<pre><code>POST /&lt;index-name&gt;/_flush \n</code></pre> <pre><code>curl -XPOST \"$ELASTICSEARCH_URL/$INDEX_NAME/_flush\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/elastic-search-cheat-sheet/#force-merge-index-segments","title":"Force Merge Index Segments","text":"<pre><code>POST /&lt;index-name&gt;/_forcemerge \n</code></pre> <pre><code>curl -XPOST \"$ELASTICSEARCH_URL/$INDEX_NAME/_forcemerge\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/gcloud-cheat-sheet/","title":"gcp gcloud cheat sheet","text":""},{"location":"cheat-sheet-and-snippets/gcloud-cheat-sheet/#gcloud-cheat-sheet","title":"gcloud cheat sheet","text":""},{"location":"cheat-sheet-and-snippets/gcloud-cheat-sheet/#login-to-gcloud","title":"Login to gcloud","text":"<pre><code>gcloud auth login\n</code></pre> <pre><code>gcloud auth login --no-launch-browser\n</code></pre>"},{"location":"cheat-sheet-and-snippets/gcloud-cheat-sheet/#gcloud-get-projects","title":"gcloud get projects","text":"<pre><code>gcloud projects list\n</code></pre>"},{"location":"cheat-sheet-and-snippets/gcloud-cheat-sheet/#gcloud-set-project","title":"gcloud set project","text":"<pre><code>PROJECT_ID=&lt;set project id&gt;\ngcloud config set project $PROJECT_ID\n</code></pre>"},{"location":"cheat-sheet-and-snippets/gcloud-cheat-sheet/#gcloud-delete-a-project","title":"gcloud delete a project","text":"<pre><code>PROJECT_ID=&lt;set project id&gt;\ngcloud --quiet projects delete $PROJECT_ID\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/","title":"git cheat sheet","text":""},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-cheat-sheet","title":"Git Cheat Sheet","text":""},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#to-keep-in-sync-with-remote-branch-you-may-loose-your-local-changes-in-the-branch","title":"To keep in sync with remote branch (You may loose your local changes in the branch)","text":"<pre><code>git fetch --all\nbranch=$(git branch | sed -n -e 's/^\\* \\(.*\\)/\\1/p')\necho $branch\ngit reset --hard origin/$branch\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#squash-previous-n-commits-into-1","title":"Squash previous N commits into 1","text":"<pre><code>git reset --soft HEAD~3 &amp;&amp;\ngit commit\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-undo-1-commit-without-loosing-changes","title":"Git undo 1 commit without loosing changes","text":"<pre><code>git reset HEAD~1 --soft   \n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-forceful-deletion-of-a-branch-without-merging-it","title":"Git forceful deletion of a branch without merging it","text":"<pre><code>git branch -D BRANCH_NAME\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-create-a-branch-from-another-branch","title":"Git create a branch from another branch","text":"<pre><code>git checkout -b NEW_BRANCH_NAME SOURCE_BRANCH_NAME\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-rename-a-local-branch","title":"Git rename a local branch","text":"<pre><code>git checkout OLD_BRANCH_NAME\n</code></pre> <pre><code>git branch -m NEW_BRANCH_NAME\n</code></pre> <code>-m, --move            move/rename a branch and its reflog</code>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-rename-a-remote-branch","title":"Git rename a remote branch","text":"<pre><code>git push origin -u NEW_BRANCH_NAME\n</code></pre> <pre><code>git push origin --delete OLD_BRANCH_NAME\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#modify-previous-commit-message","title":"Modify previous commit message","text":"<pre><code>#remote: Use this command to change commit message (one commit at a time):\ngit rebase --interactive 985f75c0e537c357414b2a60f38a07dfe941f91b^\n# remote: In the default editor, modify 'pick' to 'edit' in the line whose commit you want to modify\ngit commit --amend\n# remote: modify the commit message\nrun: git rebase --continue\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#mistakenly-did-a-git-add-to-remove-a-file-from-staging-area-use","title":"Mistakenly did a git add. To remove a file from staging area use","text":"<pre><code>git reset filename\n</code></pre> To unstag all changes use <pre><code>git reset\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#get-git-diff-after-it-was-staged-using-git-add","title":"Get <code>git diff</code> after it was staged using <code>git add</code>","text":"<pre><code>git diff --staged\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#how-can-i-purge-all-the-history-and-push-it","title":"How can I purge all the history and push it","text":"<pre><code>git checkout --orphan &lt;name_you_choose_for_orphan_branch&gt;\ngit commit\ngit push &lt;remote-name&gt; &lt;branch-name&gt;\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#remove-a-file-from-staging-if-it-was-added-using-git-add-undo-git-add","title":"Remove a file from staging if it was added using <code>git add</code> / Undo <code>git add</code>","text":"<pre><code>git restore --staged &lt;file&gt;\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-checkout-remote-branch","title":"git checkout remote branch","text":"<pre><code>git checkout -b BRANCH_NAME origin/BRANCH_NAME \n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-link-and-sync-all-remote-branch-to-local-branch","title":"git link and sync all remote branch to local branch","text":"<pre><code>git branch -r | grep -v '\\-&gt;' | sed \"s,\\x1B\\[[0-9;]*[a-zA-Z],,g\" | while read remote; do git branch --track \"${remote#origin/}\" \"$remote\"; done\ngit pull --all\n</code></pre> also check this link"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-stash-changes-by-stashing-changes-you-can-change-your-current-branch-without-having-to-worry-about-commiting-changes-in-branch","title":"git stash changes. By stashing changes you can change your current branch without having to worry about commiting changes in branch.","text":"<pre><code>git stash\ngit checkout BRANCH\ngit stash pop\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-stash-changes-including-untracked-files-by-stashing-changes-you-can-change-your-current-branch-without-having-to-worry-about-commiting-changes-in-branch","title":"git stash changes including untracked files. By stashing changes you can change your current branch without having to worry about commiting changes in branch.","text":"<pre><code>git stash --include-untracked\ngit checkout BRANCH\ngit stash pop\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#clear-git-stash","title":"Clear git stash","text":"<pre><code>git stash clear\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-goto-to-a-particular-commit","title":"git goto to a particular commit","text":"<pre><code>git reflog # check commits; you can also use git log\ngit reset --hard commit_SHA\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-undo-previous-commit-this-will-undo-the-commit-and-remove-changes-from-staging-but-your-previous-commit-file-changes-will-not-be-lost","title":"git undo previous commit. This will undo the commit and remove changes from staging, but your previous commit file changes will not be lost","text":"<pre><code>git reset HEAD~1\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-goback-to-previous-commit-important-all-changes-will-be-discarded","title":"git goback to previous commit (IMPORTANT: All changes will be discarded)","text":"<pre><code>git reset --hard HEAD\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-goback-to-previous-1-commit-important-all-changes-will-be-discarded","title":"git goback to (previous - 1 commit) (IMPORTANT: All changes will be discarded)","text":"<pre><code>git reset --hard HEAD~1\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-check-history-of-a-file","title":"git check history of a file","text":"<pre><code>git log -p -- filepath\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-bring-changes-from-a-specific-commit-from-a-specific-repository-into-working-repository","title":"git bring changes from a specific commit from a specific repository into working repository","text":"<p>use git log to get commit hash from the branch you branch you want to bring changes, then  </p><pre><code>git checkout WORKING_BRANCH\ngit cherry-pick &lt;commit-hash&gt;\n</code></pre> Note: The new changes will be commited into the working branch<p></p>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-cherry-pick-without-commit","title":"git cherry pick without commit","text":"<pre><code>git cherry-pick -n &lt;hash&gt;\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-cherry-pick-fast","title":"git cherry pick fast","text":"<pre><code># Get hash from the branch\nHASH=$(git rev-parse HEAD)\n\n# switch branch then\ngit cherry-pick -n $HASH\n\n# verify the changes then make the commit\ngit restore --staged *\ngit restore *\ngit cherry-pick  $HASH\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-abort-merge-if-stuck-in-merge-conflict","title":"git abort merge if stuck in merge conflict","text":"<pre><code>git merge --abort\n</code></pre>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-accept-all-incoming-changes","title":"git accept all incoming changes","text":"<p>Overwrite any current changes and accept all conflicts from incoming changes, you can use the theirs strategy instead: </p><pre><code>git merge [branch] --strategy-option theirs\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-accept-all-current-changes","title":"git accept all current changes","text":"<p>Accept all current changes and ignore any incoming changes </p><pre><code>git merge [branch] --strategy-option ours\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#prune-all-stale-branches-from-your-local-repository","title":"prune all stale branches from your local repository","text":"<p>This will delete all local branches that already have been removed from the remote </p><pre><code>git remote prune origin --dry-run\n</code></pre> <pre><code>git remote prune origin\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#remove-sensitive-files-and-their-commits-from-git-history","title":"Remove sensitive files and their commits from Git history","text":"<p>These commands will re-write git history and therefore advisibale to create a backup  </p> <p>This will delete all local branches that already have been removed from the remote </p><pre><code>PATH_TO_FILE=\"/a/b/c\"\n\n# If multiple branch has the secret\ngit filter-branch --force --index-filter \\\n  \"git rm --cached --ignore-unmatch $PATH_TO_FILE\" \\\n  --prune-empty --tag-name-filter cat -- --all\n\n# If only one branch has the secret\nBRANCH_CONTAINING_FILE=\"main\"\ngit filter-branch --force --index-filter \\\n\"git rm --cached --ignore-unmatch $PATH_TO_FILE\" \\\n--prune-empty --tag-name-filter cat -- $BRANCH_CONTAINING_FILE\n</code></pre>  force-push your local changes to overwrite your remote repository, as well as all the branches you've pushed up <pre><code>git push --force --verbose --dry-run\ngit push origin --force\n</code></pre> In order to remove the sensitive file from your tagged releases, you'll also need to force-push against your Git tags <pre><code>git push origin --force --tags\n</code></pre> When others try pull down your latest changes after this, they'll get a message indicating that the changes can't be applied because it's not a fast-forward.<p></p> <p>To fix this, they'll have to either delete their existing repository and re-clone it, or do a re-base </p><pre><code>git rebase --interactive\n</code></pre><p></p> <p>Complete breakdown of commands here</p>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-setup-diffferent-configuration-for-different-folders","title":"git setup diffferent configuration for different folders","text":"<p>Setup <code>~/.gitconfig</code> point differnt directories to respective gitconfig </p><pre><code>[includeIf \"gitdir:~/personal/\"]\n    path = ~/personal/.gitconfig\n\n[includeIf \"gitdir:~/work/\"]\n    path = ~/work/.gitconfig\n\n\n[init]\n defaultBranch = main\n</code></pre> Setup <code>~/personal/.gitconfig</code>  add directory specific configuration here <pre><code>[user]\n        email = anand.shivam44@yahoo.com\n        name = Shivam Anand\n[pull]\n        rebase = true\n\n[core]\n        editor = vim\n        sshCommand = ssh -i ~/.ssh/shivam_personal_laptop_ubuntu\n</code></pre> Setup <code>~/work/.gitconfig</code>  add directory specific configuration here <pre><code>[user]\n        email = shivam.anand@work-email.company\n        name = S Anand\n[pull]\n        rebase = true \n[core]\n        editor = vim\n        sshCommand = ssh -i ~/.ssh/shivam-work\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-delete-remote-branch","title":"git delete remote branch","text":"<p>Accept all current changes and ignore any incoming changes </p><pre><code>git push origin -d &lt;branch-name&gt;\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/git-cheat-sheet/#git-check-previous-n-log-commits-with-consice-view","title":"git check previous N log commits with consice view","text":"<p>Accept all current changes and ignore any incoming changes </p><pre><code>git log -2 --oneline\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/","title":"helm cheat sheet","text":""},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/#helm-cheat-sheet","title":"Helm Cheat Sheet","text":""},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/#list-installed-helm-charts","title":"List Installed Helm Charts","text":"<pre><code>#List Installed Helm Charts in current\nhelm ls \n# or\nhelm list\n\n# List Installed Helm Charts from all namespace\nhelm ls -aA\nhelm list --all-namespaces\n\n#List Installed Helm Charts in specific namespace\nhelm ls -n cert-manager\n</code></pre>"},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/#helm-find-erors-in-helm-syntax","title":"Helm find erors in helm syntax","text":"<pre><code>helm lint my-chart-folder\n</code></pre>"},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/#helm-install-charts","title":"Helm install charts","text":"<pre><code>#Run a test installation to validate and verify the chart:\n# add --dry-run --debug in any helm install command\nhelm install [release-name] ./my-chart-directory --dry-run --debug\n\n#Install a chart from a local directory\nhelm install release-name ./my-chart-directory\n\n# Install a chart from a remote repository\nhelm install my-release stable/mysql\n\n# Install a chart with custom configuration values\nhelm install my-release stable/mysql --set mysqlRootPassword=secretpassword\n\n# Install a release in a specific namespace\nhelm install -name release-name charts-name --namespace sample\n</code></pre>"},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/#upgrading-helm-charts","title":"Upgrading Helm Charts","text":"<p>To upgrade a Helm chart to a new version or with updated configuration, you can use the helm upgrade command. </p><pre><code># basic\nhelm upgrade [release] [chart]\nhelm upgrade -name helm-release-name helm-charts-path\nhelm upgrade -name helm-release-name helm-charts-path --namespace sample\n\n#Instruct Helm to rollback changes if the upgrade fails:\nhelm upgrade [release] [chart] --atomic\n\n#Upgrade a release. If it does not exist on the system, install it\nhelm upgrade [release] [chart] --install\n\n#Upgrade to a specified version\nhelm upgrade [release] [chart] --version [version-number]\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/#uninstall-helm-chart","title":"Uninstall helm chart","text":"<p>To uninstall a Helm chart and delete the associated resources from your Kubernetes cluster, you can use the helm uninstall command </p><pre><code>helm uninstall [release]\n# Example\nhelm uninstall helm-release-name -n sample-namespace\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/#helm-override-the-default-values-from-a-file","title":"helm Override the default values from a file","text":"<pre><code>helm install [app-name] [chart] --values [yaml-file/url]\nhelm install -name helm-release-name helm-charts --namespace sample --values helm-charts/values-dev.yaml\nhelm install -name helm-release-name helm-charts --namespace sample --values helm-charts/values-test.yaml\nhelm install -name helm-release-name helm-charts --namespace sample --values helm-charts/values-prod.yaml\n</code></pre>"},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/#helm-repo-list","title":"helm repo list","text":"<pre><code>helm repo list\n</code></pre>"},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/#update-list-of-helm-charts-from-repositories","title":"Update list of Helm charts from repositories","text":"<pre><code>helm repo update\n</code></pre>"},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/#search-helm-hub","title":"Search Helm Hub","text":"<pre><code>helm search hub wordpress \nhelm search hub prometheus\n</code></pre>"},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/#add-a-repository","title":"Add a repository","text":"<pre><code>helm repo add [repository-name] [url]\nhelm repo add bitnami https://charts.bitnami.com/bitnami\n</code></pre>"},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/#remove-a-repository-from-your-system","title":"Remove a repository from your system","text":"<pre><code>helm repo remove [repository-name]\nhelm repo remove bitnami\n</code></pre>"},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/#display-the-charts-values","title":"Display the chart\u2019s values","text":"<pre><code>helm show values my-charts\n</code></pre>"},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/#download-a-chart","title":"Download a chart","text":"<pre><code>helm pull my-charts\n</code></pre>"},{"location":"cheat-sheet-and-snippets/helm-cheat-sheet/#display-a-list-of-a-charts-dependencies","title":"Display a list of a chart\u2019s dependencies","text":"<pre><code>helm dependency list my-charts\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/","title":"k8s kubernetes cheat sheet","text":""},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#kubernetes-cheat-sheet","title":"Kubernetes Cheat Sheet","text":""},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#create-a-yaml-file-to-get-started","title":"Create a yaml file to get started","text":"<pre><code>kubectl run redis --image=redis --dry-run=client -o yaml &gt; redis-definition.yaml\nkubectl get events -o wide\nkebectl get po -o wide\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#create-pod-and-expose-with-service-of-type-clusterip","title":"Create pod and expose with service of type ClusterIp","text":"<pre><code>kubectl run httpd --image=httpd:alpine --port=80 --expose\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#replicasets-commands","title":"ReplicaSets commands","text":"<pre><code>kubectl get replicasets\nkubectl get rs\nkubectl describe replicasets new-replica-set\nkubectl explain replicaset | grep VERSION\nkubectl explain rs\nkubectl edit replicaset new-replica-set\nkubectl scale rs new-replica-set --replicas=2\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#kubernetes-get-everything","title":"Kubernetes get everything","text":"<pre><code>kubectl get all\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#kubectl-usage-conventions","title":"kubectl Usage Conventions","text":"<p>kubectl Usage Conventions</p>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#create-an-nginx-pod","title":"Create an NGINX Pod","text":"<pre><code>kubectl run nginx --image=nginx\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#generate-pod-manifest-yaml-file-o-yaml-dont-create-it-dry-run","title":"Generate POD Manifest YAML file (-o yaml). Don't create it(--dry-run)","text":"<pre><code>kubectl run nginx --image=nginx --dry-run=client -o yaml\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#create-a-deployment","title":"Create a deployment","text":"<pre><code>kubectl create deployment --image=nginx nginx\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#deployment-commands","title":"deployment commands","text":"<pre><code>kubectl expose deployment nginx --port=80\nkubectl edit deployment nginx\nkubectl scale deployment nginx --replicas=5\nkubectl set image deployment nginx nginx=nginx:1.18\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#generate-deployment-yaml-file","title":"Generate Deployment YAML file","text":"<pre><code>kubectl create deployment --image=nginx nginx --dry-run=client -o yaml\nkubectl create deployment --image=nginx nginx --dry-run=client -o yaml &gt; nginx-deployment.yaml\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#generate-deployment-yaml-file-with-replicas","title":"Generate Deployment YAML file with --replicas","text":"<pre><code>kubectl create deployment --image=nginx nginx --replicas=4 --dry-run=client -o yaml &gt; nginx-deployment.yaml\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#create-nodeport-service-template","title":"Create nodeport service template","text":"<pre><code>kubectl create service  nodeport webapp-service --tcp=8080:8080 --node-port=30080 --dry-run=client -o yaml\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#service-commands","title":"Service commands","text":"<pre><code>kubectl get service\nkubectl get svc\nkubectl describe service kubernetes\nkubectl expose pod redis --port=6379 --name redis-service --dry-run=client -o yaml #Create a Service named redis-service of type ClusterIP to expose pod redis on port 6379\nkubectl create service  nodeport webapp-service --tcp=8080:8080 --node-port=30080 --dry-run=client -o yaml &gt; service.yml\nkubectl create service clusterip redis --tcp=6379:6379 --dry-run=client -o yaml #Create a Service named redis-service of type ClusterIP to expose pod redis on port 6379\nkubectl expose pod nginx --type=NodePort --port=80 --name=nginx-service --dry-run=client -o yaml #Create a Service named nginx of type NodePort to expose pod nginx's port 80 on port 30080 on the nodes\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#namespace-commands","title":"namespace commands","text":"<pre><code>kubectl get ns\nkubectl get namespace\nkubectl get namespaces\nkubectl create namespace dev\nkubectl create namespace dev --dry-run=client -o yaml\nkubectl get po --namespace=dev\nkubectl get po -n=dev\nkubectl  config set-context $(kubectl config current-context) --namespace=dev # permanently change current namespace context\nkubectl get pods --all-namespaces\nkubectl get po -A\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#work-with-files","title":"work with files","text":"<pre><code>kubectl create -f nginx.yml\nkubectl replace -f nginx.yml\nkubectl replace --force -f nginx.yml\nkubectl delete -f nginx.yml\n\n# Apply command is declarative approach, it will figure out itself how to do\nkubectl apply -f nginx.yml\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#add-label","title":"add label","text":"<pre><code>kubectl run redis -l tier=db --image=redis:alpine\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#filtering-and-using-selectors","title":"filtering and using selectors","text":"<pre><code>kubectl get po --selector app=App1\nkubectl get po --selector env=prod,bu=finance,tier=frontend\nkubectl get po --selector app=App1 --no-headers | wc -l\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#taints-and-toleration","title":"Taints and Toleration","text":"<p>Nodes can be taint and pods can be tolerant taint effect can be NoSchedule | PreferNoSchedule | NoExecute </p><pre><code>kubectl taint nodes node-name key=value:taint-effect\nkubectl taint nodes node-name app=blue:NoSchedule\nkubectl describe node kubermaster | grep Taint\n\n# Remove Taint from node\nkubectl taint nodes controlplane key=value:NoSchedule-\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#port-forwarding-to-local-machine-to-test-deployment-and-pods-works-with-remote-kubernetes-deployments-also","title":"Port Forwarding to local machine to test deployment and pods, works with remote kubernetes deployments also","text":"<pre><code>k port-forward svc/&lt;service-name&gt; local-machine-port:target-port\n# or\nk port-forward &lt;pod-name&gt; local-machine-port:target-port\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#node-selector","title":"Node selector","text":"<pre><code>kubectl label nodes node-name key=value\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#daemonsets","title":"DaemonSets","text":"<pre><code>kubectl get daemonsets\nkubectl describe daemonsets monitoring-daemon\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#static-pods","title":"Static Pods","text":"<pre><code>ps -aux | grep kube # then look for --client \npath /etc/kubernetes/manifests\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#basic-monitoring","title":"Basic monitoring","text":"<pre><code>kubectl top node\nkubectl top pod\nkubectl top pod --sort-by='cpu' --no-headers | tail -1\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#basic-logging","title":"Basic Logging","text":"<pre><code>kubectl logs pod-name\nkubectl logs pod-name -c container-name\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#rollout-and-rollback","title":"Rollout and Rollback","text":"<pre><code>kubectl rollout status deployment/myapp\nkubectl rollout history deployment/myapp\nkubectl rollout undo deployment/myapp\nkubectl get replicasets\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#configmaps","title":"ConfigMaps","text":"<pre><code>kubectl get configmap\nkubectl get cm\nkubectl describe configmaps db-config\nkubectl create configmap webapp-config-map --from-literal=APP_COLOR=darkblue\nkubectl create configmap webapp-config-map --from-literal=APP_COLOR=darkblue --from-literal=APP_BACKGROUND=pink \n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#configmaps_1","title":"ConfigMaps","text":"<pre><code>echo -n \"mysql\" | base64\necho -n \"bx1cZax=\" | base64 --decode\n\nkubectl get secrets\nkubectl describe secrets\nkubectl describe secrets db-config\nkubectl create secret generic webapp-config-map --from-literal=APP_COLOR=darkblue\nkubectl create secret generic webapp-config-map --from-literal=APP_COLOR=darkblue --from-literal=APP_BACKGROUND=pink \n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#execute-commands","title":"execute commands","text":"<pre><code>kubectl exec -it pod-name -- cat /log/app.log\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#os-upgrades-cluster-upgrade","title":"Os Upgrades % Cluster Upgrade","text":"<pre><code>kubectl drain node01 --ignore-daemonsets #take out all pods in node so that node can go down for maintainance\nkubectl uncordon node01 #bring back node\nkubectl cordon node01 #do not create new pods \n\n# Upgrade cluster\nkubectl cordon controlplane\napt-get update\nkubeadm upgrade plan \nhttps://kubernetes.io/docs/tasks/administer-cluster/kubeadm/kubeadm-upgrade/\napt-mark unhold kubeadm &amp;&amp;  apt-get update &amp;&amp; apt-get install -y kubeadm=1.26.1-00 &amp;&amp;  apt-mark hold kubeadm\nkubeadm upgrade node # only for worker nodes\nkubeadm upgrade plan\nkubeadm upgrade apply v1.26.0\napt search kubelet\napt upgrade kubelet=1.26.1-00\nk get no\nsystemctl daemon-reload\nsystemctl restart kubelet\nk get no\nkubectl uncordon controlplane\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#backup","title":"Backup","text":"<pre><code>kubectl get all --all-namespaces -0 yaml &gt; all-deploy-services.yaml\n\netcdctl --version\nkubectl get po -n=kube-system\nkubectl describe pod etcd-controlplane -n kube-system\n\n\nexport ETCDCTL_API=3 # when working with etcdctl\netcdctl snapshot save -h\n\n\n\nkubectl -n kube-system describe pod etcd-controlplane | grep '\\--listen-client-urls'      --listen-client-urls=https://127.0.0.1:2379,https://192.50.67.3:2379\n\n\nETCDCTL_API=3 etcdctl --endpoints=https://[127.0.0.1]:2379 \\\n--cacert=/etc/kubernetes/pki/etcd/ca.crt \\\n--cert=/etc/kubernetes/pki/etcd/server.crt \\\n--key=/etc/kubernetes/pki/etcd/server.key \\\nsnapshot save /opt/snapshot-pre-boot.db\n\n\n\nETCDCTL_API=3 etcdctl  --data-dir /var/lib/etcd-from-backup \\\nsnapshot restore /opt/snapshot-pre-boot.db\n\nwatch \"crictl ps | grep etcd\"\n\n\n\n\netcdctl snapshot restore -h\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#cluster-config","title":"cluster config","text":"<pre><code>kubectl config get-clusters\nkubectl config use-context cluster1    \n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#certificate-signing-request-csr","title":"Certificate Signing Request CSR","text":"<pre><code>kubectl get csr\nkubectl certificate approve &lt;username&gt;  \nkubectl get csr &lt;username&gt; -o yaml\nkubectl certificate deny &lt;username&gt;\nkubectl delete csr agent-smith\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#config-user-permissions","title":"Config, user , permissions","text":"<pre><code>kubectl config current-context --kubeconfig my-kube-config\nkubectl config --kubeconfig=/root/my-kube-config use-context research\nkubectl config --kubeconfig=/root/my-kube-config current-context\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#authorization","title":"Authorization","text":"<pre><code>kubectl get roles\nkubectl get rolebindings\nkubectl describe role developer\nkubectl describe rolebindings &lt;developer-role-binding&gt;\n\n# check if you have access\nkubectl auth can-i create deployment\nkubectl auth can-i delete nodes\n\nkubectl auth can-i create deployment --as dev-user\nkubectl auth can-i delete nodes --as dev-user\n\nkubectl create role developer --namespace=default --verb=list,create,delete --resource=pods\nkubectl create rolebinding dev-user-binding --namespace=default --role=developer --user=dev-user\n\nkubectl create role developer --namespace=default --verb=list,create,delete --resource=pods --dry-run=client -o yaml &gt; lab1.yml\nkubectl create rolebinding dev-user-binding --namespace=default --role=developer --user=dev-user  --dry-run=client -o yaml &gt; lab2.yml\n\nkubectl  edit role developer -n blue\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#namespace","title":"Namespace","text":"<pre><code>kubectl api-resources --namespaced=true\nkubectl api-resources --namespaced=false\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#service-account","title":"Service Account","text":"<pre><code>kubectl create serviceaccount dashboard-sa\nkubectl get serviceaccount \nkubectl describe serviceaccount dashboard-sa\nkubectl describe secret dashboard-sa-token\n</code></pre>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#kubernetes-tool-kubectx-kubens","title":"Kubernetes Tool: kubectx &amp; kubens","text":"<p>kubectx - change k8s context fast kubens - change namespace fast Install </p><pre><code>brew install kubectx\nbrew install fzf #optional, used for easy search\n</code></pre> use kubectx <pre><code>kubectx\n</code></pre> use kubens <pre><code>kubens\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/kubectl-cheat-sheet/#kubernetes-tool-kube-ps1","title":"Kubernetes Tool: kube-ps1","text":"<pre><code>kubeon     : turn on kube-ps1 status for this shell.  Takes precedence over\n             global setting for current session\nkubeon -g  : turn on kube-ps1 status globally\nkubeoff    : turn off kube-ps1 status for this shell. Takes precedence over\n             global setting for current session\nkubeoff -g : turn off kube-ps1 status globally\n</code></pre>"},{"location":"cheat-sheet-and-snippets/linux-cheat-sheet/","title":"linux cheat sheet","text":""},{"location":"cheat-sheet-and-snippets/linux-cheat-sheet/#linux-cheatsheet","title":"Linux CheatSheet","text":""},{"location":"cheat-sheet-and-snippets/linux-cheat-sheet/#sheel-and-bash","title":"Sheel and Bash","text":""},{"location":"cheat-sheet-and-snippets/linux-cheat-sheet/#replace-all-file-in-a-folder-with-another-file-works-recursively-and-source-and-target-both-follow-regex","title":"Replace all file in a folder with another file. Works recursively and source and target both follow regex","text":"<pre><code>find &lt;folder where you want to fiind&gt; -name \"*.pem\" -exec cp file.pem '{}' \\;\n</code></pre>"},{"location":"cheat-sheet-and-snippets/linux-cheat-sheet/#delete-all-files-in-a-folder-with-an-extension-pattern","title":"Delete all files in a folder with an extension / pattern","text":"<pre><code>find . -name \"*.tf-e\" -type f #find all file\n</code></pre> Use with precaution <pre><code>find . -name \"*.txt-e\" -type f -delete\n</code></pre>"},{"location":"cheat-sheet-and-snippets/linux-cheat-sheet/#find-and-replace-a-word-in-all-files-in-a-folder","title":"Find and replace a word in all files in a folder","text":"<p>Only on MacOS if find command doesn't work </p><pre><code>export LC_CTYPE=C \nexport LANG=C\n</code></pre><p></p> <pre><code>find ./ -type f -exec sed -i '' -e 's/Hello/Linux/g' {} \\;\n</code></pre>"},{"location":"cheat-sheet-and-snippets/linux-cheat-sheet/#find-a-folder-and-copy-a-folder-inside-the-folder","title":"Find a folder and copy a folder inside the folder","text":"<pre><code>find . -type d -name \"04-*\" -exec cp -r &lt;folder path&gt; '{}' \\;\n</code></pre>"},{"location":"cheat-sheet-and-snippets/linux-cheat-sheet/#for-loop-with-string-numbers","title":"For loop with String Numbers","text":"<pre><code>for ((i = \"1\"; i &lt;= \"6\"; i++)); do \n   echo \"$i\"\ndone\n</code></pre>"},{"location":"cheat-sheet-and-snippets/linux-cheat-sheet/#for-loop-with-numbers","title":"For loop with Numbers","text":"<pre><code>for ((i = 1; i &lt;= 6; i++)); do \n   echo \"$i\"\ndone\n</code></pre>"},{"location":"cheat-sheet-and-snippets/linux-cheat-sheet/#generate-sha512-password-and-set-password-using-hash","title":"Generate SHA512 Password and set password using HASH","text":"<pre><code>PASSWORD='password'\nLINUX_USER='root'\nHASH=$(openssl passwd -1 $PASSWORD)\necho $HASH\nusermod -p \"$HASH\" $LINUX_USER\n</code></pre>"},{"location":"cheat-sheet-and-snippets/linux-cheat-sheet/#get-list-of-larget-files-in-a-folder-recursively","title":"Get list of larget files in a folder recursively","text":"<pre><code>find . -type f -exec du -h {} + | sort -rh | head -n 10\n</code></pre>"},{"location":"cheat-sheet-and-snippets/mkdocs-cheat-sheet/","title":"Homepage","text":""},{"location":"cheat-sheet-and-snippets/mkdocs-cheat-sheet/#homepage","title":"Homepage","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"cheat-sheet-and-snippets/mkdocs-cheat-sheet/#code-annotation-examples","title":"Code Annotation Examples","text":""},{"location":"cheat-sheet-and-snippets/mkdocs-cheat-sheet/#codeblocks","title":"Codeblocks","text":"<p>Some <code>code</code> goes here.</p>"},{"location":"cheat-sheet-and-snippets/mkdocs-cheat-sheet/#plain-codeblock","title":"Plain codeblock","text":"<p>A plain codeblock:</p> <pre><code>Some code here\ndef myfunction()\n// some comment\n</code></pre>"},{"location":"cheat-sheet-and-snippets/mkdocs-cheat-sheet/#code-for-a-specific-language","title":"Code for a specific language","text":"<p>Some more code with the <code>py</code> at the start:</p> <pre><code>import tensorflow as tf\ndef whatever()\n</code></pre>"},{"location":"cheat-sheet-and-snippets/mkdocs-cheat-sheet/#with-a-title","title":"With a title","text":"bubble_sort.py<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"cheat-sheet-and-snippets/mkdocs-cheat-sheet/#with-line-numbers","title":"With line numbers","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"cheat-sheet-and-snippets/mkdocs-cheat-sheet/#highlighting-lines","title":"Highlighting lines","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"cheat-sheet-and-snippets/mkdocs-cheat-sheet/#icons-and-emojs","title":"Icons and Emojs","text":""},{"location":"cheat-sheet-and-snippets/networking-cheat-sheet/","title":"networking commands cheat sheet","text":"<p>get all physical and virtual networking devices attached ifconfig</p> <p>ip -4 addr</p> <p>ip -6 addr</p> <p>telnet  Using telnet to check for open ports telnet 38.76.11.19  22</p>"},{"location":"cheat-sheet-and-snippets/openssl-cheat-sheet/","title":"openssl cheat sheet","text":""},{"location":"cheat-sheet-and-snippets/openssl-cheat-sheet/#openssl","title":"OpenSSL","text":""},{"location":"cheat-sheet-and-snippets/openssl-cheat-sheet/#openssl-create-a-certificate-signing-requestcsr-standard-rsa-2048","title":"OpenSSL - Create a Certificate Signing Request(CSR) - Standard RSA 2048","text":"<ol> <li>Create a Certificate metadata configuration file. This configuration will be added to CSR and will show in the Certificate also In the certified name use the domain you are generating the certificate for <pre><code>cat &gt; rsa-certificate-metadata.cnf&lt;&lt;EOF\n[req]\ndistinguished_name = req_distinguished_name\nprompt = no\n\n[req_distinguished_name]\nC   = US\nST  = CA\nL   = Mountain View\nO   = Shivam Corp, Inc.\nCN  = *.shivamanand.com\nEOF\n</code></pre></li> <li>Use Open SSL to create a CSR <pre><code>openssl req -new -newkey rsa:2048 -nodes -keyout rsa-domain-private.key -out rsa-certificate-signing-request-for-certificate-authority.csr -config rsa-certificate-metadata.cnf\n</code></pre></li> <li>To check your request is correct, you can once again use openssl <pre><code>openssl req -noout -text -in rsa-certificate-signing-request-for-certificate-authority.csr\n# and\nopenssl asn1parse -i -in rsa-certificate-signing-request-for-certificate-authority.csr\n</code></pre></li> <li>Take the <code>rsa-certificate-signing-request-for-certificate-authority.csr</code> file and go to your CA to get a Certificate Chain</li> <li>Once you get the certificate from CA Verifiy all combinations are correct. The CSR, Private key and the certificate all should have the same md5. If the match you have all the correct combination of files. <pre><code># Private Key\nopenssl rsa -noout -modulus -in rsa-domain-private.key | openssl md5\n\n# CSR \nopenssl req -noout -modulus -in rsa-certificate-signing-request-for-certificate-authority.csr | openssl md5\n\n# Certificate from CA (Certificate Chain or Leaf Certificate, both will give same result)\nopenssl x509 -noout -modulus -in certificate-chain.crt | openssl md5\n</code></pre></li> <li>Keep the private key very safe</li> </ol>"},{"location":"cheat-sheet-and-snippets/openssl-cheat-sheet/#openssl-create-an-ecdsa-certificate-signing-requestcsr","title":"OpenSSL - Create an ECDSA Certificate Signing Request(CSR)","text":"<ol> <li>Create a Certificate metadata configuration file. This configuration will be added to CSR and will show in the Certificate also In the certified name use the domain you are generating the certificate for <pre><code>cat &gt; ecdsa-certificate-metadata.cnf&lt;&lt;EOF\n[req]\ndistinguished_name = req_distinguished_name\nprompt = no\n\n[req_distinguished_name]\nC   = US\nST  = CA\nL   = Mountain View\nO   = Shivam Corp, Inc.\nCN  = *.shivamanand.com\nEOF\n</code></pre></li> <li>Create CSR <pre><code>openssl req -new -newkey ec -pkeyopt ec_paramgen_curve:prime256v1 -nodes -keyout ecdsa-domain-private.key -out ecdsa-certificate-signing-request-for-certificate-authority.csr -config ecdsa-certificate-metadata.cnf\n\n# or\n\nopenssl ecparam -name secp521r1 -genkey -noout -out ecdsa-domain-private.key\nopenssl req -new -sha256 -key ecdsa-domain-private.key -out ecdsa-certificate-signing-request-for-certificate-authority.csr -config ecdsa-certificate-metadata.cnf\n\n# or\n\nopenssl req -new -newkey ec -pkeyopt ec_paramgen_curve:P-256 -nodes -keyout ecdsa-domain-private.key -out ecdsa-certificate-signing-request-for-certificate-authority.csr -config ecdsa-certificate-metadata.cnf\n\n# or \n# very generic\n# Generate ECDSA key. curve is to be replaced with: prime256v1, secp384r1, secp521r1, or any other supported elliptic curve:\n\nopenssl ecparam -genkey -name prime256v1 | openssl ec -out ecdsa-domain-private.key\nopenssl req -new -sha256 -key ecdsa-domain-private.key -out ecdsa-certificate-signing-request-for-certificate-authority.csr -config ecdsa-certificate-metadata.cnf\n</code></pre></li> </ol> <p>secp256r1 and prime256v1 refer to the same elliptic curve. Both terms are used interchangeably in different contexts, but they describe the same curve parameters.</p> <p>In summary, these terms describe the same curve, but they come from different naming conventions.  </p> <ol> <li>To check your request is correct, you can once again use openssl <pre><code>openssl req -noout -text -in ecdsa-certificate-signing-request-for-certificate-authority.csr\n# and\nopenssl asn1parse -i -in ecdsa-certificate-signing-request-for-certificate-authority.csr\n</code></pre></li> <li>Take the <code>ecdsa-certificate-signing-request-for-certificate-authority.csr</code> file and go to your CA to get a Certificate Chain</li> <li>Once you get the certificate from CA Verifiy all combinations are correct. The CSR, Private key and the certificate all should have the same md5. If the match you have all the correct combination of files. <pre><code># Private Key\nopenssl ec -in ecdsa-domain-private.key -pubout | openssl md5\n\n# CSR \nopenssl req -in ecdsa-certificate-signing-request-for-certificate-authority.csr -noout -pubkey | openssl md5\n\n# Certificate from CA (Certificate Chain or Leaf Certificate, both will give same result)\nopenssl x509 -in ecdsa-certificate-chain.crt -pubkey -noout | openssl md5\n</code></pre></li> <li>Keep the private key very safe</li> </ol>"},{"location":"cheat-sheet-and-snippets/openssl-cheat-sheet/#openssl-get-certificate-details-of-a-domain","title":"OpenSSL - Get Certificate details of a domain","text":"<pre><code>openssl s_client -connect shivamanand.com:443 -showcerts &lt;/dev/null | openssl x509 -outform pem &gt; public_data\nopenssl x509 -in public_data -noout -text\n</code></pre>"},{"location":"cheat-sheet-and-snippets/openssl-cheat-sheet/#openssl-get-certificate-expiry","title":"OpenSSL - Get Certificate Expiry","text":"<pre><code>HOST='shivamanand.com'\ncurl --max-time 2 --insecure -v https://$HOST 2&gt;&amp;1 | grep expire\n</code></pre> <pre><code>openssl s_client -servername shivamanand.com -connect shivamanand.com:443 &lt; /dev/null | openssl x509 -text  | grep \"Not After\"\n</code></pre>"},{"location":"cheat-sheet-and-snippets/openssl-cheat-sheet/#openssl-get-raw-certificates-and-certificate-chain","title":"OpenSSL - Get RAW Certificates and Certificate Chain","text":"<pre><code># Get individual certificates\nopenssl s_client -showcerts -verify 5 -connect shivamanand.com:443 &lt; /dev/null |\n   awk '/BEGIN CERTIFICATE/,/END CERTIFICATE/{ if(/BEGIN CERTIFICATE/){a++}; out=\"cert\"a\".pem\"; print &gt;out}'\n\n# Get raw certificate chain\nrm -rf certificate-chain\nfor cert in *.pem; do \n        cat $cert &gt;&gt; certificate-chain\ndone\n\n# Rename Files Properly\nfor cert in *.pem; do \n        newname=$(openssl x509 -noout -subject -in $cert | sed -nE 's/.*CN ?= ?(.*)/\\1/; s/[ ,.*]/_/g; s/__/_/g; s/_-_/-/; s/^_//g;p' | tr '[:upper:]' '[:lower:]').pem\n        echo \"${newname}\"; mv \"${cert}\" \"${newname}\" \ndone\n</code></pre>"},{"location":"cheat-sheet-and-snippets/openssl-cheat-sheet/#openssl-verify-combinations","title":"OpenSSL - Verify combinations","text":"<pre><code># Private Key\nopenssl rsa -noout -modulus -in domain-private-key.key | openssl md5\n\n# CSR \nopenssl req -noout -modulus -in certificate-signing-request-for-certificate-authority.csr | openssl md5\n\n# Certificate from CA (Certificate Chain or Leaf Certificate, both will give same result)\nopenssl x509 -noout -modulus -in certificate-chain.crt | openssl md5\n</code></pre>"},{"location":"cheat-sheet-and-snippets/regex-cheat-sheet/","title":"regex cheat sheet","text":""},{"location":"cheat-sheet-and-snippets/regex-cheat-sheet/#regex-cheatsheet","title":"Regex CheatSheet","text":""},{"location":"cheat-sheet-and-snippets/regex-cheat-sheet/#anything-that-line-starts-with-abc-and-line-ends-with-xyz","title":"Anything that Line starts with abc and Line ends with xyz","text":"<pre><code>^abc.*xyz$\n</code></pre> <pre><code>^abc(.*)xyz$\n</code></pre>"},{"location":"cheat-sheet-and-snippets/regex-cheat-sheet/#anywhere-anything-between-abc-and-xyx-includes-abc-and-xyz","title":"Anywhere anything between ABC and xyx &amp; includes  abc and xyz","text":"<pre><code>abc.*xyz\n</code></pre> <pre><code>abc(.*)xyz\n</code></pre>"},{"location":"cheat-sheet-and-snippets/regex-cheat-sheet/#find-pattern-between-multiple-lines","title":"Find pattern between multiple lines","text":"<pre><code>abc((.|\\n)*)xyx\n</code></pre>"},{"location":"cheat-sheet-and-snippets/regex-cheat-sheet/#find-pattern-between-multiple-lines_1","title":"Find pattern between multiple lines","text":"<p>Regex pattern to find </p><pre><code>abc((.|\\n)*)lmn((.|\\n)*)xyz\n</code></pre> Regex pattern to replace. Each pattern corresponds to equivalent $n <pre><code>def$1opq$2wxy\n</code></pre><p></p>"},{"location":"cheat-sheet-and-snippets/regex-cheat-sheet/#make-regex-non-greedy-select-only-the-first-occurence","title":"Make Regex non-greedy, select only the first occurence","text":"<pre><code>abc((.|\\n)*?)lmn\nabc(.*?)xyz\n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/","title":"sql cheat sheet","text":""},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#sql-cheat-sheet","title":"SQL Cheat Sheet","text":""},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#postgress","title":"Postgress","text":""},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#connect-to-database","title":"Connect to Database","text":"<pre><code>HOST=\"host-url.com\"\nPORT=5432\nUSER=\"username\"\nDATABASE=\"employees\"\n\nPGPASSWORD='&lt;enter password&gt; psql -h $HOST -p $PORT -U $USER -d $DATABASE\n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#list-all-databases","title":"List all Databases","text":"<pre><code>\\l\n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#connect-to-database_1","title":"Connect to database","text":"<pre><code>\\c &lt;database_name&gt;\n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#show-current-database","title":"Show current database","text":"<pre><code>SELECT current_database();\n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#create-database","title":"Create database","text":"<pre><code>CREATE DATABASE &lt;database_name&gt; WITH OWNER &lt;username&gt;;\n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#drop-database","title":"Drop database","text":"<pre><code>DROP DATABASE IF EXISTS &lt;database_name&gt;;\n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#rename-database","title":"Rename database","text":"<pre><code>ALTER DATABASE &lt;old_name&gt; RENAME TO &lt;new_name&gt;;\n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#show-version","title":"Show version","text":"<pre><code>SHOW SERVER_VERSION;\n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#show-system-status","title":"Show system status","text":"<pre><code>\\conninfo\n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#show-environmental-variables","title":"Show environmental variables","text":"<pre><code>SHOW ALL;\n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#list-users","title":"List users","text":"<pre><code>SELECT rolname FROM pg_roles;\n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#show-current-user","title":"Show current user","text":"<pre><code>SELECT current_user;\n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#show-current-users-permissions","title":"Show current user's permissions","text":"<pre><code>\\du\n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#show-all-tables-in-database","title":"Show all tables in database","text":"<pre><code>\\dt\n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#describe-table","title":"Describe table","text":"<pre><code>\\d &lt;table&gt;  \n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#describe-table-with-details","title":"Describe table with details","text":"<pre><code>\\d+ &lt;table&gt; \n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#list-tables-from-current-schema","title":"List tables from current schema","text":"<pre><code>\\dt \n</code></pre>"},{"location":"cheat-sheet-and-snippets/sql-cheat-sheet/#use-pg_dump-to-backup-a-database","title":"Use pg_dump to backup a database","text":"<pre><code>HOST=\"host-url.com\"\nPORT=5432\nUSER=\"username\"\nDATABASE=\"employees\"\n\npg_dump --schema-only -U $USER -d $DATABASE -h $HOST -p $PORT  &gt; pgdump_file.sql\n</code></pre>"}]}